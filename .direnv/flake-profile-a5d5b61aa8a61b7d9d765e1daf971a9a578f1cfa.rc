unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
ACLOCAL_PATH='/nix/store/xanxf5bwj0ddd7q34jlafask4475vvpr-pkg-config-wrapper-0.29.2/share/aclocal:/nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev/share/aclocal:/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev/share/aclocal:/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/share/aclocal:/nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev/share/aclocal:/nix/store/rzfc5l7l2gjfl14lrj1hfmga5hsccr6b-automake-1.16.5/share/aclocal:/nix/store/42yck6r7y2jhcrd0ay0glz30w6pw4wzh-libtool-2.4.7/share/aclocal'
export ACLOCAL_PATH
ANDROID_HOME='/nix/store/0xdyx9kjwkxpsb3hp0hivpw3rqcr2g6q-android-sdk-env/share/android-sdk'
export ANDROID_HOME
ANDROID_SDK_ROOT='/nix/store/0xdyx9kjwkxpsb3hp0hivpw3rqcr2g6q-android-sdk-env/share/android-sdk'
export ANDROID_SDK_ROOT
AR='ar'
export AR
AS='as'
export AS
BASH='/nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21/bin/bash'
CC='clang'
export CC
CONFIG_SHELL='/nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21/bin/bash'
export CONFIG_SHELL
CXX='clang++'
export CXX
GDK_PIXBUF_MODULE_FILE='/nix/store/k7dhsrdpvrpnbsmq565zqflg75q9gqwb-librsvg-2.57.0/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache'
export GDK_PIXBUF_MODULE_FILE
GETTEXTDATADIRS='/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/share/gettext:/nix/store/0i61f5s9yd5fnjcmci042zb7x1ij5w70-glib-2.78.1/share/gettext:/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38/share/gettext'
export GETTEXTDATADIRS
GETTEXTDATADIRS_FOR_BUILD='/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/share/gettext:/nix/store/0i61f5s9yd5fnjcmci042zb7x1ij5w70-glib-2.78.1/share/gettext:/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38/share/gettext'
export GETTEXTDATADIRS_FOR_BUILD
GSETTINGS_SCHEMAS_PATH='/nix/store/q4gmlqr30cxazzkfc6bsd813b0galx5y-gsettings-desktop-schemas-45.0/share/gsettings-schemas/gsettings-desktop-schemas-45.0:/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38/share/gsettings-schemas/gtk+3-3.24.38'
export GSETTINGS_SCHEMAS_PATH
HOSTTYPE='aarch64'
HOST_PATH='/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev/bin:/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/bin:/nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50/bin:/nix/store/51ydyix8zv7psy475vwgckwakcwkkmfg-glib-2.78.1-bin/bin:/nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev/bin:/nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19/bin:/nix/store/vqv02qxjpzms9rq90na1phifqgbpahr8-libjpeg-turbo-2.1.5.1-bin/bin:/nix/store/xcy0fr1dangwh9r9isay6fqbg91g5b3h-xz-5.4.5-bin/bin:/nix/store/pkinz04w5chvl71yk504g0nkljxpypbz-libtiff-4.6.0-bin/bin:/nix/store/442pyslbwncqj5s5wl9fy683qbq1jpwk-libpng-apng-1.6.40-dev/bin:/nix/store/84brri12ig6gr7zmp65h6wa1vknapbbj-gdk-pixbuf-2.42.10/bin:/nix/store/q79w9hbcs2hb2ijrq426bjkajb92kchi-cairo-1.18.0-dev/bin:/nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev/bin:/nix/store/qay0pa86lb712162d6m5lyw62iczb71d-bzip2-1.0.8-bin/bin:/nix/store/35m30y4ds947qxygsiz10zj5drpj0ky8-brotli-1.1.0/bin:/nix/store/ff680j3lhvla3q2w4s46jbm05l616pl9-fontconfig-2.14.2-bin/bin:/nix/store/k7dhsrdpvrpnbsmq565zqflg75q9gqwb-librsvg-2.57.0/bin:/nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev/bin:/nix/store/zsn9jjdmiwjwlz9k2dh0qpkfjy3v2vbm-expat-2.5.0-dev/bin:/nix/store/j9gmkhrly2l4ixh7qr7z85aij1xr8znd-dbus-1.14.10-lib/bin:/nix/store/pdyvgkvhl9zcadg0c11x4ra6c188ih8j-dbus-1.14.10/bin:/nix/store/sb7l967l821w0qr6238c10c69ksmjhr6-fribidi-1.0.13/bin:/nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev/bin:/nix/store/h0q125hlrkvg57wjbp7d0345nx8wpgh6-graphite2-1.3.14/bin:/nix/store/1kvy8iiphp8p37f6k9h271vy4kqkyxhx-pango-1.51.0-bin/bin:/nix/store/0xdyx9kjwkxpsb3hp0hivpw3rqcr2g6q-android-sdk-env/bin:/nix/store/rczwkkwi514iwlr6cygkm65cirkh5p99-autoconf-2.71/bin:/nix/store/rzfc5l7l2gjfl14lrj1hfmga5hsccr6b-automake-1.16.5/bin:/nix/store/42yck6r7y2jhcrd0ay0glz30w6pw4wzh-libtool-2.4.7/bin:/nix/store/x8i01zy4469z8ky4k1c7agix2vy8zssz-gnum4-1.4.19/bin:/nix/store/x1bzwj6pz7f3ajg5y36x07b1328jzx7r-file-5.45/bin:/nix/store/xanxf5bwj0ddd7q34jlafask4475vvpr-pkg-config-wrapper-0.29.2/bin:/nix/store/smnwjhgdxzww6ivm8jp660w2b4iybdfn-openvpn-2.5.8/bin:/nix/store/g7kcahmwnkl5y377pfc4br55y0lcifbd-openssl-3.0.12-bin/bin:/nix/store/7fqs4rrpjh376q1zmnc7bq2253pwigmp-lz4-1.9.4-bin/bin:/nix/store/pzajj7gw0nazs3vzp6jld53q8ird5izr-coreutils-9.4/bin:/nix/store/6x5inimwy8rlvf678yy080zccbw71alb-findutils-4.9.0/bin:/nix/store/01bzxsyn8dqz9fsdhp9r6ya796g5ydmf-diffutils-3.10/bin:/nix/store/9z9k8dwhhiryr7z2pz70zca0vwa15yqc-gnused-4.9/bin:/nix/store/zsm4xd527427rnjfnvfhvsld2n57b822-gnugrep-3.11/bin:/nix/store/hhc2x65zvp89lh15grqk21r6dcvifggy-gawk-5.2.2/bin:/nix/store/gclclfhq9blxp32lv8kxm9iv5060rx5f-gnutar-1.35/bin:/nix/store/crpi4clk07gy760ydbb710f74dy8q6c9-gzip-1.13/bin:/nix/store/qay0pa86lb712162d6m5lyw62iczb71d-bzip2-1.0.8-bin/bin:/nix/store/zc9qsb0rzlw0ckhy7097frcwb4pkfx3d-gnumake-4.4.1/bin:/nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21/bin:/nix/store/kizmwlnj40d11ixbap74c0syaqxn05wc-patch-2.7.6/bin:/nix/store/xcy0fr1dangwh9r9isay6fqbg91g5b3h-xz-5.4.5-bin/bin:/nix/store/x1bzwj6pz7f3ajg5y36x07b1328jzx7r-file-5.45/bin'
export HOST_PATH
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LD='ld'
export LD
LD_DYLD_PATH='/usr/lib/dyld'
export LD_DYLD_PATH
LINENO='76'
MACHTYPE='aarch64-apple-darwin23.1.0'
MACOSX_DEPLOYMENT_TARGET='11.0'
export MACOSX_DEPLOYMENT_TARGET
NIX_BINTOOLS='/nix/store/0i7w6qsij8akg6h39qn67w9ig5hirv1a-cctools-binutils-darwin-wrapper-16.0.6-973.0.1'
export NIX_BINTOOLS
NIX_BINTOOLS_WRAPPER_TARGET_HOST_aarch64_apple_darwin='1'
export NIX_BINTOOLS_WRAPPER_TARGET_HOST_aarch64_apple_darwin
NIX_BUILD_CORES='12'
export NIX_BUILD_CORES
NIX_CC='/nix/store/vwh2qqal1q101wv4jy40giavp73q0msd-clang-wrapper-16.0.6'
export NIX_CC
NIX_CC_WRAPPER_TARGET_HOST_aarch64_apple_darwin='1'
export NIX_CC_WRAPPER_TARGET_HOST_aarch64_apple_darwin
NIX_CFLAGS_COMPILE=' -frandom-seed=m4vazb45rd -isystem /nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev/include -isystem /nix/store/xn84skq2pg1kf7f3xqddig02niqgdqxn-at-spi2-core-2.50.0-dev/include -isystem /nix/store/43yyvcz4c5xyfssmdigc6i79br17v46c-dbus-1.14.10-dev/include -isystem /nix/store/zsn9jjdmiwjwlz9k2dh0qpkfjy3v2vbm-expat-2.5.0-dev/include -isystem /nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev/include -isystem /nix/store/d4bjk2zh5i2ddmh7qci5xxlxrq3317mi-zlib-1.3-dev/include -isystem /nix/store/hkvxz4an6447hck7fjdidqq1wma2iqlm-libffi-3.4.4-dev/include -isystem /nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/include -isystem /nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50/include -isystem /nix/store/q79w9hbcs2hb2ijrq426bjkajb92kchi-cairo-1.18.0-dev/include -isystem /nix/store/aw0f3vps9lw40hm97rgb27mchrrgc0l7-fontconfig-2.14.2-dev/include -isystem /nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev/include -isystem /nix/store/kjdsdv4ixlcya8c6bq877zmay152xjbh-bzip2-1.0.8-dev/include -isystem /nix/store/1jfxww57qdfx88amyqrzx6r5cb47dn7v-brotli-1.1.0-dev/include -isystem /nix/store/442pyslbwncqj5s5wl9fy683qbq1jpwk-libpng-apng-1.6.40-dev/include -isystem /nix/store/nrpr0yxf3b2spbb46lm248r1li20fdfv-pixman-0.42.2/include -isystem /nix/store/ndg357fgda648nn0m12ljgc3df4xxymx-libXext-1.3.5-dev/include -isystem /nix/store/nqpwpdjjq87sq1pmwxklq21carnm2njk-xorgproto-2023.2/include -isystem /nix/store/cbk0s4xxmj727jydxz6ygs216fdanvmc-libXau-1.0.11-dev/include -isystem /nix/store/6as89nw0s2r7nndahcfcqw9jic4wrsma-libXrender-0.9.11-dev/include -isystem /nix/store/j03743d6f07fg1n8j734pqnyhmhwv29w-libX11-1.8.7-dev/include -isystem /nix/store/90b2pjkljrzszcx8dcafp5cqk32xwl9g-libxcb-1.16-dev/include -isystem /nix/store/rfphwxywgf9b8wlx1kszn9g7kcam3p1f-fribidi-1.0.13-dev/include -isystem /nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev/include -isystem /nix/store/l2nwx9828hkkpkcd56g6hy3yj3q8sqd6-libtiff-4.6.0-dev/include -isystem /nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19/include -isystem /nix/store/pavvbsnvvgvm98670b54y74awryhds91-libjpeg-turbo-2.1.5.1-dev/include -isystem /nix/store/ffibfm2g5dcfkv1cfgykm73im0k4g0lh-xz-5.4.5-dev/include -isystem /nix/store/q4gmlqr30cxazzkfc6bsd813b0galx5y-gsettings-desktop-schemas-45.0/include -isystem /nix/store/4ww4a7brsmkq6krmp7agag2smj077wl8-libICE-1.1.1-dev/include -isystem /nix/store/c06r0kzg3whnln7p8x5byihfgy9cc45r-libSM-1.2.4-dev/include -isystem /nix/store/hslvfzf1h08lh89rq036h863pqirb5hn-libXcomposite-0.4.6-dev/include -isystem /nix/store/3pfbyajggx4ad4nf4kmrwalzmamhfxxc-libXfixes-6.0.1-dev/include -isystem /nix/store/169hahjznv26hmm4i2prgqkzm420ra64-libXcursor-1.2.1-dev/include -isystem /nix/store/ysdvcwki5ma3s8amqjknp038dd22zsmf-libXdamage-1.1.6-dev/include -isystem /nix/store/5b11vk0gi9sljpxdw4crhp49fibixas2-libXi-1.8.1-dev/include -isystem /nix/store/h687lsp21nzfd0x7nhyghyx72iww1jip-libXrandr-1.5.4-dev/include -isystem /nix/store/04qgn2crlf1gn3aaphhqshf7ff9sdzwv-pango-1.51.0-dev/include -isystem /nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev/include -isystem /nix/store/h1x98ibx54wq8hldv48raz0jvqysdr4p-graphite2-1.3.14-dev/include -iframework /nix/store/vwa8lcfi5dkj75qzrg06s7hwpsvnwpz6-apple-framework-Cocoa-11.0.0/Library/Frameworks -iframework /nix/store/fc639c4xh8lglmifc3wvay5nf6krvq2f-apple-framework-AppKit-11.0.0/Library/Frameworks -iframework /nix/store/n1mh4i0jm66zdkzgdnq236i4h7c3m3rp-apple-framework-ApplicationServices-11.0.0/Library/Frameworks -iframework /nix/store/a0wk765b7r3y9zp0p0i1w8n0zzi28qbi-apple-framework-ColorSync-11.0.0/Library/Frameworks -iframework /nix/store/ja18z0clxqzibsh4wal5rs5q4rg6k91k-apple-framework-CoreFoundation-11.0.0/Library/Frameworks -isystem /nix/store/jamghc149d8bmzapam08ix18ch35199w-libobjc-11.0.0/include -iframework /nix/store/l9j1ib6jg3szi8ggr7xybf0r1wiksd2i-apple-framework-CoreGraphics-11.0.0/Library/Frameworks -iframework /nix/store/m5f5v944r8pbsvfka4xiwfpsb4ad0ml3-apple-framework-IOKit-11.0.0/Library/Frameworks -iframework /nix/store/kd3krx5pdhr1p9nwy38q2vw9bxr0pc4r-apple-framework-SystemConfiguration-11.0.0/Library/Frameworks -iframework /nix/store/fcbhgkmxh513b3dfqax0riravqzk2r4f-apple-framework-Security-11.0.0/Library/Frameworks -isystem /nix/store/nkyf1xpghrzgjj3772h0pypb3dp4kaz1-apple-lib-libDER/include -iframework /nix/store/7a2lmq1n3jkbag2v3z9fhwjfglrjal0b-apple-framework-CoreServices-11.0.0/Library/Frameworks -iframework /nix/store/3jkl5xg6kdkn172a87iipn0qfn7xp8yk-apple-framework-CFNetwork-11.0.0/Library/Frameworks -iframework /nix/store/5c4yhrpz1ckfvkxg4likdpsymcfrm1n6-apple-framework-CoreAudio-11.0.0/Library/Frameworks -iframework /nix/store/jkk8chclqa7q4q8p2xvybqd59xm8s0gk-apple-framework-CoreAudioTypes-11.0.0/Library/Frameworks -iframework /nix/store/b235b9zkzkw9h35xjirwyvlqvqk9bz5h-apple-framework-DiskArbitration-11.0.0/Library/Frameworks -iframework /nix/store/ia966vyhfh2b1yv4nvl6glvpw6nr2c6h-apple-framework-NetFS-11.0.0/Library/Frameworks -iframework /nix/store/4ks3xwsx26g78klnwzl5r69ywzhw97ni-apple-framework-ServiceManagement-11.0.0/Library/Frameworks -iframework /nix/store/hrh7m7mq3qa9w0fgwrkm4y5r6adxxngm-apple-framework-CoreText-11.0.0/Library/Frameworks -iframework /nix/store/vryibiz2jc5q02lcpnn7p068wskinj6g-apple-framework-ImageIO-11.0.0/Library/Frameworks -iframework /nix/store/nzwkbjz3br3zwdxb346wy1plg6q84zmv-apple-framework-AudioToolbox-11.0.0/Library/Frameworks -iframework /nix/store/jwbayarsn8zv6p65xabkhgn2ajd8xg7i-apple-private-framework-AudioToolboxCore-11.0.0/Library/Frameworks -iframework /nix/store/9a9sp6ziyraxbrysah3b2qrpmvf7gpb0-apple-framework-Carbon-11.0.0/Library/Frameworks -iframework /nix/store/vpilmiph4azwc5z375kr150rqvhcvamc-apple-framework-Foundation-11.0.0/Library/Frameworks -iframework /nix/store/0b9gm6pj8x5j5f7y19iaxyivnh71w5kk-apple-framework-Combine-11.0.0/Library/Frameworks -iframework /nix/store/61pk8hyq9c9k2vhxcvphzvd6ad6gy8hi-apple-framework-QuartzCore-11.0.0/Library/Frameworks -iframework /nix/store/gjrcqzfq4qw1kpdmhaqn8g5k42rr96ym-apple-framework-CoreImage-11.0.0/Library/Frameworks -iframework /nix/store/6sh4p0qcq8gbwj3499gw9r2601nv3j30-apple-framework-CoreVideo-11.0.0/Library/Frameworks -iframework /nix/store/apxyw6zcf62h8a8z6wp6gnrng6w5lhh2-apple-framework-IOSurface-11.0.0/Library/Frameworks -iframework /nix/store/h0xi670x8sgd8xcamzv7ywaibmmk7m2h-apple-framework-Metal-11.0.0/Library/Frameworks -iframework /nix/store/dlwz4x9fpx6gn1kdrn6nb0rd36jhpxyf-apple-framework-OpenGL-11.0.0/Library/Frameworks -iframework /nix/store/mkq7i31cs50km0jvlskjbxwg4p2zcclb-apple-framework-OpenCL-11.0.0/Library/Frameworks -iframework /nix/store/n7mzg4pfxng0m2j3lqhzlvv7jgcjx4py-apple-framework-CoreMIDI-11.0.0/Library/Frameworks -iframework /nix/store/sbd4ky1bwb68sny2331pl78j3ll2dnac-apple-framework-AudioUnit-11.0.0/Library/Frameworks -iframework /nix/store/w9pc4pis61n4m4kg7jq87sgfc5g4hdvx-apple-framework-CloudKit-11.0.0/Library/Frameworks -iframework /nix/store/vbwcw3cm6lhjjjgqxc82j16i9hab5rfl-apple-framework-CoreLocation-11.0.0/Library/Frameworks -iframework /nix/store/142giy09cz62l640vgqqgybrcm3s2ckm-apple-framework-CoreData-11.0.0/Library/Frameworks -iframework /nix/store/i93br40mjwxwpqz0628clr305v4hcyxc-apple-private-framework-UIFoundation-11.0.0/Library/Frameworks -isystem /nix/store/rw2vnhkzx95gg0yj9s572s1fxjb30d82-librsvg-2.57.0-dev/include -isystem /nix/store/vx66p3752j69kl70z22rpwqbfg98labg-libcxx-16.0.6-dev/include -isystem /nix/store/a2knp1813k9mw8pir0y2jsavwdc8i6b7-libcxxabi-16.0.6-dev/include -isystem /nix/store/bj94cxxlv3h57w85nvagymxg8n7fsy9i-compiler-rt-libc-16.0.6-dev/include -isystem /nix/store/42yck6r7y2jhcrd0ay0glz30w6pw4wzh-libtool-2.4.7/include -isystem /nix/store/agkz3r22pqaf9qh11d5w0j8mmpkw1j5k-file-5.45-dev/include -isystem /nix/store/smnwjhgdxzww6ivm8jp660w2b4iybdfn-openvpn-2.5.8/include -isystem /nix/store/93rvmf6ybl5c6bpk85r1rg08kygg5xi5-openssl-3.0.12-dev/include -isystem /nix/store/f53fki355zpkj691y0id7ihw0drzzxib-lz4-1.9.4-dev/include -isystem /nix/store/nc407vsv3124r9qlbahvxpvsplrzbc6m-lzo-2.10/include -isystem /nix/store/h15b7gqa0ghxij93bvazf0wv0fdkxl6b-openpam-20170430/include -iframework /nix/store/k16r6kq869aaqxihlw8899ly0rbsaws0-apple-framework-CoreFoundation-11.0.0/Library/Frameworks -isystem /nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev/include -isystem /nix/store/xn84skq2pg1kf7f3xqddig02niqgdqxn-at-spi2-core-2.50.0-dev/include -isystem /nix/store/43yyvcz4c5xyfssmdigc6i79br17v46c-dbus-1.14.10-dev/include -isystem /nix/store/zsn9jjdmiwjwlz9k2dh0qpkfjy3v2vbm-expat-2.5.0-dev/include -isystem /nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev/include -isystem /nix/store/d4bjk2zh5i2ddmh7qci5xxlxrq3317mi-zlib-1.3-dev/include -isystem /nix/store/hkvxz4an6447hck7fjdidqq1wma2iqlm-libffi-3.4.4-dev/include -isystem /nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/include -isystem /nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50/include -isystem /nix/store/q79w9hbcs2hb2ijrq426bjkajb92kchi-cairo-1.18.0-dev/include -isystem /nix/store/aw0f3vps9lw40hm97rgb27mchrrgc0l7-fontconfig-2.14.2-dev/include -isystem /nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev/include -isystem /nix/store/kjdsdv4ixlcya8c6bq877zmay152xjbh-bzip2-1.0.8-dev/include -isystem /nix/store/1jfxww57qdfx88amyqrzx6r5cb47dn7v-brotli-1.1.0-dev/include -isystem /nix/store/442pyslbwncqj5s5wl9fy683qbq1jpwk-libpng-apng-1.6.40-dev/include -isystem /nix/store/nrpr0yxf3b2spbb46lm248r1li20fdfv-pixman-0.42.2/include -isystem /nix/store/ndg357fgda648nn0m12ljgc3df4xxymx-libXext-1.3.5-dev/include -isystem /nix/store/nqpwpdjjq87sq1pmwxklq21carnm2njk-xorgproto-2023.2/include -isystem /nix/store/cbk0s4xxmj727jydxz6ygs216fdanvmc-libXau-1.0.11-dev/include -isystem /nix/store/6as89nw0s2r7nndahcfcqw9jic4wrsma-libXrender-0.9.11-dev/include -isystem /nix/store/j03743d6f07fg1n8j734pqnyhmhwv29w-libX11-1.8.7-dev/include -isystem /nix/store/90b2pjkljrzszcx8dcafp5cqk32xwl9g-libxcb-1.16-dev/include -isystem /nix/store/rfphwxywgf9b8wlx1kszn9g7kcam3p1f-fribidi-1.0.13-dev/include -isystem /nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev/include -isystem /nix/store/l2nwx9828hkkpkcd56g6hy3yj3q8sqd6-libtiff-4.6.0-dev/include -isystem /nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19/include -isystem /nix/store/pavvbsnvvgvm98670b54y74awryhds91-libjpeg-turbo-2.1.5.1-dev/include -isystem /nix/store/ffibfm2g5dcfkv1cfgykm73im0k4g0lh-xz-5.4.5-dev/include -isystem /nix/store/q4gmlqr30cxazzkfc6bsd813b0galx5y-gsettings-desktop-schemas-45.0/include -isystem /nix/store/4ww4a7brsmkq6krmp7agag2smj077wl8-libICE-1.1.1-dev/include -isystem /nix/store/c06r0kzg3whnln7p8x5byihfgy9cc45r-libSM-1.2.4-dev/include -isystem /nix/store/hslvfzf1h08lh89rq036h863pqirb5hn-libXcomposite-0.4.6-dev/include -isystem /nix/store/3pfbyajggx4ad4nf4kmrwalzmamhfxxc-libXfixes-6.0.1-dev/include -isystem /nix/store/169hahjznv26hmm4i2prgqkzm420ra64-libXcursor-1.2.1-dev/include -isystem /nix/store/ysdvcwki5ma3s8amqjknp038dd22zsmf-libXdamage-1.1.6-dev/include -isystem /nix/store/5b11vk0gi9sljpxdw4crhp49fibixas2-libXi-1.8.1-dev/include -isystem /nix/store/h687lsp21nzfd0x7nhyghyx72iww1jip-libXrandr-1.5.4-dev/include -isystem /nix/store/04qgn2crlf1gn3aaphhqshf7ff9sdzwv-pango-1.51.0-dev/include -isystem /nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev/include -isystem /nix/store/h1x98ibx54wq8hldv48raz0jvqysdr4p-graphite2-1.3.14-dev/include -iframework /nix/store/vwa8lcfi5dkj75qzrg06s7hwpsvnwpz6-apple-framework-Cocoa-11.0.0/Library/Frameworks -iframework /nix/store/fc639c4xh8lglmifc3wvay5nf6krvq2f-apple-framework-AppKit-11.0.0/Library/Frameworks -iframework /nix/store/n1mh4i0jm66zdkzgdnq236i4h7c3m3rp-apple-framework-ApplicationServices-11.0.0/Library/Frameworks -iframework /nix/store/a0wk765b7r3y9zp0p0i1w8n0zzi28qbi-apple-framework-ColorSync-11.0.0/Library/Frameworks -iframework /nix/store/ja18z0clxqzibsh4wal5rs5q4rg6k91k-apple-framework-CoreFoundation-11.0.0/Library/Frameworks -isystem /nix/store/jamghc149d8bmzapam08ix18ch35199w-libobjc-11.0.0/include -iframework /nix/store/l9j1ib6jg3szi8ggr7xybf0r1wiksd2i-apple-framework-CoreGraphics-11.0.0/Library/Frameworks -iframework /nix/store/m5f5v944r8pbsvfka4xiwfpsb4ad0ml3-apple-framework-IOKit-11.0.0/Library/Frameworks -iframework /nix/store/kd3krx5pdhr1p9nwy38q2vw9bxr0pc4r-apple-framework-SystemConfiguration-11.0.0/Library/Frameworks -iframework /nix/store/fcbhgkmxh513b3dfqax0riravqzk2r4f-apple-framework-Security-11.0.0/Library/Frameworks -isystem /nix/store/nkyf1xpghrzgjj3772h0pypb3dp4kaz1-apple-lib-libDER/include -iframework /nix/store/7a2lmq1n3jkbag2v3z9fhwjfglrjal0b-apple-framework-CoreServices-11.0.0/Library/Frameworks -iframework /nix/store/3jkl5xg6kdkn172a87iipn0qfn7xp8yk-apple-framework-CFNetwork-11.0.0/Library/Frameworks -iframework /nix/store/5c4yhrpz1ckfvkxg4likdpsymcfrm1n6-apple-framework-CoreAudio-11.0.0/Library/Frameworks -iframework /nix/store/jkk8chclqa7q4q8p2xvybqd59xm8s0gk-apple-framework-CoreAudioTypes-11.0.0/Library/Frameworks -iframework /nix/store/b235b9zkzkw9h35xjirwyvlqvqk9bz5h-apple-framework-DiskArbitration-11.0.0/Library/Frameworks -iframework /nix/store/ia966vyhfh2b1yv4nvl6glvpw6nr2c6h-apple-framework-NetFS-11.0.0/Library/Frameworks -iframework /nix/store/4ks3xwsx26g78klnwzl5r69ywzhw97ni-apple-framework-ServiceManagement-11.0.0/Library/Frameworks -iframework /nix/store/hrh7m7mq3qa9w0fgwrkm4y5r6adxxngm-apple-framework-CoreText-11.0.0/Library/Frameworks -iframework /nix/store/vryibiz2jc5q02lcpnn7p068wskinj6g-apple-framework-ImageIO-11.0.0/Library/Frameworks -iframework /nix/store/nzwkbjz3br3zwdxb346wy1plg6q84zmv-apple-framework-AudioToolbox-11.0.0/Library/Frameworks -iframework /nix/store/jwbayarsn8zv6p65xabkhgn2ajd8xg7i-apple-private-framework-AudioToolboxCore-11.0.0/Library/Frameworks -iframework /nix/store/9a9sp6ziyraxbrysah3b2qrpmvf7gpb0-apple-framework-Carbon-11.0.0/Library/Frameworks -iframework /nix/store/vpilmiph4azwc5z375kr150rqvhcvamc-apple-framework-Foundation-11.0.0/Library/Frameworks -iframework /nix/store/0b9gm6pj8x5j5f7y19iaxyivnh71w5kk-apple-framework-Combine-11.0.0/Library/Frameworks -iframework /nix/store/61pk8hyq9c9k2vhxcvphzvd6ad6gy8hi-apple-framework-QuartzCore-11.0.0/Library/Frameworks -iframework /nix/store/gjrcqzfq4qw1kpdmhaqn8g5k42rr96ym-apple-framework-CoreImage-11.0.0/Library/Frameworks -iframework /nix/store/6sh4p0qcq8gbwj3499gw9r2601nv3j30-apple-framework-CoreVideo-11.0.0/Library/Frameworks -iframework /nix/store/apxyw6zcf62h8a8z6wp6gnrng6w5lhh2-apple-framework-IOSurface-11.0.0/Library/Frameworks -iframework /nix/store/h0xi670x8sgd8xcamzv7ywaibmmk7m2h-apple-framework-Metal-11.0.0/Library/Frameworks -iframework /nix/store/dlwz4x9fpx6gn1kdrn6nb0rd36jhpxyf-apple-framework-OpenGL-11.0.0/Library/Frameworks -iframework /nix/store/mkq7i31cs50km0jvlskjbxwg4p2zcclb-apple-framework-OpenCL-11.0.0/Library/Frameworks -iframework /nix/store/n7mzg4pfxng0m2j3lqhzlvv7jgcjx4py-apple-framework-CoreMIDI-11.0.0/Library/Frameworks -iframework /nix/store/sbd4ky1bwb68sny2331pl78j3ll2dnac-apple-framework-AudioUnit-11.0.0/Library/Frameworks -iframework /nix/store/w9pc4pis61n4m4kg7jq87sgfc5g4hdvx-apple-framework-CloudKit-11.0.0/Library/Frameworks -iframework /nix/store/vbwcw3cm6lhjjjgqxc82j16i9hab5rfl-apple-framework-CoreLocation-11.0.0/Library/Frameworks -iframework /nix/store/142giy09cz62l640vgqqgybrcm3s2ckm-apple-framework-CoreData-11.0.0/Library/Frameworks -iframework /nix/store/i93br40mjwxwpqz0628clr305v4hcyxc-apple-private-framework-UIFoundation-11.0.0/Library/Frameworks -isystem /nix/store/rw2vnhkzx95gg0yj9s572s1fxjb30d82-librsvg-2.57.0-dev/include -isystem /nix/store/vx66p3752j69kl70z22rpwqbfg98labg-libcxx-16.0.6-dev/include -isystem /nix/store/a2knp1813k9mw8pir0y2jsavwdc8i6b7-libcxxabi-16.0.6-dev/include -isystem /nix/store/bj94cxxlv3h57w85nvagymxg8n7fsy9i-compiler-rt-libc-16.0.6-dev/include -isystem /nix/store/42yck6r7y2jhcrd0ay0glz30w6pw4wzh-libtool-2.4.7/include -isystem /nix/store/agkz3r22pqaf9qh11d5w0j8mmpkw1j5k-file-5.45-dev/include -isystem /nix/store/smnwjhgdxzww6ivm8jp660w2b4iybdfn-openvpn-2.5.8/include -isystem /nix/store/93rvmf6ybl5c6bpk85r1rg08kygg5xi5-openssl-3.0.12-dev/include -isystem /nix/store/f53fki355zpkj691y0id7ihw0drzzxib-lz4-1.9.4-dev/include -isystem /nix/store/nc407vsv3124r9qlbahvxpvsplrzbc6m-lzo-2.10/include -isystem /nix/store/h15b7gqa0ghxij93bvazf0wv0fdkxl6b-openpam-20170430/include -iframework /nix/store/k16r6kq869aaqxihlw8899ly0rbsaws0-apple-framework-CoreFoundation-11.0.0/Library/Frameworks'
export NIX_CFLAGS_COMPILE
NIX_DONT_SET_RPATH='1'
export NIX_DONT_SET_RPATH
NIX_DONT_SET_RPATH_FOR_BUILD='1'
export NIX_DONT_SET_RPATH_FOR_BUILD
NIX_ENFORCE_NO_NATIVE='1'
export NIX_ENFORCE_NO_NATIVE
NIX_HARDENING_ENABLE='fortify fortify3 stackprotector pic strictoverflow format relro bindnow'
export NIX_HARDENING_ENABLE
NIX_IGNORE_LD_THROUGH_GCC='1'
export NIX_IGNORE_LD_THROUGH_GCC
NIX_LDFLAGS=' -lintl -liconv -lintl -liconv -L/nix/store/565gbkm3ycyxb76vxirp3zz1xfqmwsga-expat-2.5.0/lib -L/nix/store/j9gmkhrly2l4ixh7qr7z85aij1xr8znd-dbus-1.14.10-lib/lib -L/nix/store/z4by244ay1bc3axm8m4816jywfhf2v5w-zlib-1.3/lib -L/nix/store/xsjanj26r5c21krbrc5qpv89famgpkqj-libffi-3.4.4/lib -L/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/lib -L/nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50/lib -L/nix/store/0i61f5s9yd5fnjcmci042zb7x1ij5w70-glib-2.78.1/lib -L/nix/store/8ca8nlcchkb15xkw71abyyg3y3jf2y95-at-spi2-core-2.50.0/lib -L/nix/store/c7bkc1ym3bi3qcbc5r5gbvf50pml1s7v-bzip2-1.0.8/lib -L/nix/store/qqm58zqcqgcw4s77z794ayl7hf5qldp1-brotli-1.1.0-lib/lib -L/nix/store/4mn867vwmga3skpd5a2k7vwnzzj84ixn-libpng-apng-1.6.40/lib -L/nix/store/lcv3fcj0bn1ncs3rsp3p4g8zidph7gzs-freetype-2.13.2/lib -L/nix/store/rh96ry7p3ym08d4a60dr769xcb7wzd4y-fontconfig-2.14.2-lib/lib -L/nix/store/nrpr0yxf3b2spbb46lm248r1li20fdfv-pixman-0.42.2/lib -L/nix/store/jczjh812658cjl5mn0s4m82iqwivpg3m-libXau-1.0.11/lib -L/nix/store/p0vmcib5qprs2nn0ilc0idffhpp8y27i-libXext-1.3.5/lib -L/nix/store/b0zngcarpbmfzv9nzswvnc73s6b30zg6-libxcb-1.16/lib -L/nix/store/cj0yijx1zfb1rxd10khsirb3n0hg6338-libX11-1.8.7/lib -L/nix/store/zbz325qyfnh8w4fq7q0fr7fch92sb101-libXrender-0.9.11/lib -L/nix/store/ciw2qpmcyj6lbl8acf32l7g9xqjzcrag-cairo-1.18.0/lib -L/nix/store/sb7l967l821w0qr6238c10c69ksmjhr6-fribidi-1.0.13/lib -L/nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19/lib -L/nix/store/w2vl66w3737awmfvvx95ld93lkvnd7iv-libjpeg-turbo-2.1.5.1/lib -L/nix/store/ymrpm5a94dpjlzv75l249mfvahmf6s0m-xz-5.4.5/lib -L/nix/store/bn0dw585sgzgvpq6pfhx7jahg46m48n0-libtiff-4.6.0/lib -L/nix/store/84brri12ig6gr7zmp65h6wa1vknapbbj-gdk-pixbuf-2.42.10/lib -L/nix/store/dwfchcrc3k24nk0jjm6zlcnz264zhv9i-libICE-1.1.1/lib -L/nix/store/qz45zciq40avs3wmp6cnayhljj8qpblf-libSM-1.2.4/lib -L/nix/store/lya90bjwvcyvxkawnc67anndjw4m78mz-libXfixes-6.0.1/lib -L/nix/store/69xihcx0zq4ggscb9j5qa76sy5yjfvmc-libXcomposite-0.4.6/lib -L/nix/store/6c6vlkzpvrgaw4xysb0lzflxifh3lp5v-libXcursor-1.2.1/lib -L/nix/store/zd92197zl0zjz5fxp4h41iv65w777xfa-libXdamage-1.1.6/lib -L/nix/store/223zgqa41lcl91fd951b68gxdh5dlcfl-libXi-1.8.1/lib -L/nix/store/36y9905cz6p482rqn9979ajlfyj0g4zy-libXrandr-1.5.4/lib -L/nix/store/h0q125hlrkvg57wjbp7d0345nx8wpgh6-graphite2-1.3.14/lib -L/nix/store/062d63hbfmd6kbh9yikszzvq19z8sps2-harfbuzz-7.3.0/lib -L/nix/store/bccwlwq250113qmid996v7nm6bi8v6s5-pango-1.51.0/lib -L/nix/store/jamghc149d8bmzapam08ix18ch35199w-libobjc-11.0.0/lib -L/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38/lib -L/nix/store/k7dhsrdpvrpnbsmq565zqflg75q9gqwb-librsvg-2.57.0/lib -L/nix/store/5fwdmpa7hbg04j9ivh6k49gy14igvm4j-rust-1.76.0-2024-02-04-07dca489a/lib -L/nix/store/p5wr7bxrs2naa4rwy9sqs19rljr7g7qh-libcxx-16.0.6/lib -L/nix/store/0w070w3a2azyy1gs4mgskz9j3pq0g5dy-libcxxabi-16.0.6/lib -L/nix/store/bkisxa66nfr133rp78lf3nyg48r72z8d-compiler-rt-libc-16.0.6/lib -L/nix/store/x1bzwj6pz7f3ajg5y36x07b1328jzx7r-file-5.45/lib -L/nix/store/v2ambbfyvhdjip6qp8rz58ili4hhw0pk-libtool-2.4.7-lib/lib -L/nix/store/8n81733fycf92j2229i4bq7zc59652pw-openssl-3.0.12/lib -L/nix/store/jmvac9ibqb0ks00na76njb17rbzfranj-lz4-1.9.4/lib -L/nix/store/nc407vsv3124r9qlbahvxpvsplrzbc6m-lzo-2.10/lib -L/nix/store/h15b7gqa0ghxij93bvazf0wv0fdkxl6b-openpam-20170430/lib -L/nix/store/565gbkm3ycyxb76vxirp3zz1xfqmwsga-expat-2.5.0/lib -L/nix/store/j9gmkhrly2l4ixh7qr7z85aij1xr8znd-dbus-1.14.10-lib/lib -L/nix/store/z4by244ay1bc3axm8m4816jywfhf2v5w-zlib-1.3/lib -L/nix/store/xsjanj26r5c21krbrc5qpv89famgpkqj-libffi-3.4.4/lib -L/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/lib -L/nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50/lib -L/nix/store/0i61f5s9yd5fnjcmci042zb7x1ij5w70-glib-2.78.1/lib -L/nix/store/8ca8nlcchkb15xkw71abyyg3y3jf2y95-at-spi2-core-2.50.0/lib -L/nix/store/c7bkc1ym3bi3qcbc5r5gbvf50pml1s7v-bzip2-1.0.8/lib -L/nix/store/qqm58zqcqgcw4s77z794ayl7hf5qldp1-brotli-1.1.0-lib/lib -L/nix/store/4mn867vwmga3skpd5a2k7vwnzzj84ixn-libpng-apng-1.6.40/lib -L/nix/store/lcv3fcj0bn1ncs3rsp3p4g8zidph7gzs-freetype-2.13.2/lib -L/nix/store/rh96ry7p3ym08d4a60dr769xcb7wzd4y-fontconfig-2.14.2-lib/lib -L/nix/store/nrpr0yxf3b2spbb46lm248r1li20fdfv-pixman-0.42.2/lib -L/nix/store/jczjh812658cjl5mn0s4m82iqwivpg3m-libXau-1.0.11/lib -L/nix/store/p0vmcib5qprs2nn0ilc0idffhpp8y27i-libXext-1.3.5/lib -L/nix/store/b0zngcarpbmfzv9nzswvnc73s6b30zg6-libxcb-1.16/lib -L/nix/store/cj0yijx1zfb1rxd10khsirb3n0hg6338-libX11-1.8.7/lib -L/nix/store/zbz325qyfnh8w4fq7q0fr7fch92sb101-libXrender-0.9.11/lib -L/nix/store/ciw2qpmcyj6lbl8acf32l7g9xqjzcrag-cairo-1.18.0/lib -L/nix/store/sb7l967l821w0qr6238c10c69ksmjhr6-fribidi-1.0.13/lib -L/nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19/lib -L/nix/store/w2vl66w3737awmfvvx95ld93lkvnd7iv-libjpeg-turbo-2.1.5.1/lib -L/nix/store/ymrpm5a94dpjlzv75l249mfvahmf6s0m-xz-5.4.5/lib -L/nix/store/bn0dw585sgzgvpq6pfhx7jahg46m48n0-libtiff-4.6.0/lib -L/nix/store/84brri12ig6gr7zmp65h6wa1vknapbbj-gdk-pixbuf-2.42.10/lib -L/nix/store/dwfchcrc3k24nk0jjm6zlcnz264zhv9i-libICE-1.1.1/lib -L/nix/store/qz45zciq40avs3wmp6cnayhljj8qpblf-libSM-1.2.4/lib -L/nix/store/lya90bjwvcyvxkawnc67anndjw4m78mz-libXfixes-6.0.1/lib -L/nix/store/69xihcx0zq4ggscb9j5qa76sy5yjfvmc-libXcomposite-0.4.6/lib -L/nix/store/6c6vlkzpvrgaw4xysb0lzflxifh3lp5v-libXcursor-1.2.1/lib -L/nix/store/zd92197zl0zjz5fxp4h41iv65w777xfa-libXdamage-1.1.6/lib -L/nix/store/223zgqa41lcl91fd951b68gxdh5dlcfl-libXi-1.8.1/lib -L/nix/store/36y9905cz6p482rqn9979ajlfyj0g4zy-libXrandr-1.5.4/lib -L/nix/store/h0q125hlrkvg57wjbp7d0345nx8wpgh6-graphite2-1.3.14/lib -L/nix/store/062d63hbfmd6kbh9yikszzvq19z8sps2-harfbuzz-7.3.0/lib -L/nix/store/bccwlwq250113qmid996v7nm6bi8v6s5-pango-1.51.0/lib -L/nix/store/jamghc149d8bmzapam08ix18ch35199w-libobjc-11.0.0/lib -L/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38/lib -L/nix/store/k7dhsrdpvrpnbsmq565zqflg75q9gqwb-librsvg-2.57.0/lib -L/nix/store/5fwdmpa7hbg04j9ivh6k49gy14igvm4j-rust-1.76.0-2024-02-04-07dca489a/lib -L/nix/store/p5wr7bxrs2naa4rwy9sqs19rljr7g7qh-libcxx-16.0.6/lib -L/nix/store/0w070w3a2azyy1gs4mgskz9j3pq0g5dy-libcxxabi-16.0.6/lib -L/nix/store/bkisxa66nfr133rp78lf3nyg48r72z8d-compiler-rt-libc-16.0.6/lib -L/nix/store/x1bzwj6pz7f3ajg5y36x07b1328jzx7r-file-5.45/lib -L/nix/store/v2ambbfyvhdjip6qp8rz58ili4hhw0pk-libtool-2.4.7-lib/lib -L/nix/store/8n81733fycf92j2229i4bq7zc59652pw-openssl-3.0.12/lib -L/nix/store/jmvac9ibqb0ks00na76njb17rbzfranj-lz4-1.9.4/lib -L/nix/store/nc407vsv3124r9qlbahvxpvsplrzbc6m-lzo-2.10/lib -L/nix/store/h15b7gqa0ghxij93bvazf0wv0fdkxl6b-openpam-20170430/lib'
export NIX_LDFLAGS
NIX_LDFLAGS_FOR_BUILD=' -lintl -liconv'
export NIX_LDFLAGS_FOR_BUILD
NIX_NO_SELF_RPATH='1'
export NIX_NO_SELF_RPATH
NIX_PKG_CONFIG_WRAPPER_TARGET_HOST_aarch64_apple_darwin='1'
export NIX_PKG_CONFIG_WRAPPER_TARGET_HOST_aarch64_apple_darwin
NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_aarch64_apple_darwin='1'
export NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_aarch64_apple_darwin
NIX_STORE='/nix/store'
export NIX_STORE
NM='nm'
export NM
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='darwin23.1.0'
PATH='/nix/store/xanxf5bwj0ddd7q34jlafask4475vvpr-pkg-config-wrapper-0.29.2/bin:/nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev/bin:/nix/store/zsn9jjdmiwjwlz9k2dh0qpkfjy3v2vbm-expat-2.5.0-dev/bin:/nix/store/j9gmkhrly2l4ixh7qr7z85aij1xr8znd-dbus-1.14.10-lib/bin:/nix/store/pdyvgkvhl9zcadg0c11x4ra6c188ih8j-dbus-1.14.10/bin:/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev/bin:/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/bin:/nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50/bin:/nix/store/51ydyix8zv7psy475vwgckwakcwkkmfg-glib-2.78.1-bin/bin:/nix/store/q79w9hbcs2hb2ijrq426bjkajb92kchi-cairo-1.18.0-dev/bin:/nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev/bin:/nix/store/qay0pa86lb712162d6m5lyw62iczb71d-bzip2-1.0.8-bin/bin:/nix/store/35m30y4ds947qxygsiz10zj5drpj0ky8-brotli-1.1.0/bin:/nix/store/442pyslbwncqj5s5wl9fy683qbq1jpwk-libpng-apng-1.6.40-dev/bin:/nix/store/ff680j3lhvla3q2w4s46jbm05l616pl9-fontconfig-2.14.2-bin/bin:/nix/store/sb7l967l821w0qr6238c10c69ksmjhr6-fribidi-1.0.13/bin:/nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev/bin:/nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19/bin:/nix/store/vqv02qxjpzms9rq90na1phifqgbpahr8-libjpeg-turbo-2.1.5.1-bin/bin:/nix/store/xcy0fr1dangwh9r9isay6fqbg91g5b3h-xz-5.4.5-bin/bin:/nix/store/pkinz04w5chvl71yk504g0nkljxpypbz-libtiff-4.6.0-bin/bin:/nix/store/84brri12ig6gr7zmp65h6wa1vknapbbj-gdk-pixbuf-2.42.10/bin:/nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev/bin:/nix/store/h0q125hlrkvg57wjbp7d0345nx8wpgh6-graphite2-1.3.14/bin:/nix/store/1kvy8iiphp8p37f6k9h271vy4kqkyxhx-pango-1.51.0-bin/bin:/nix/store/k7dhsrdpvrpnbsmq565zqflg75q9gqwb-librsvg-2.57.0/bin:/nix/store/5fwdmpa7hbg04j9ivh6k49gy14igvm4j-rust-1.76.0-2024-02-04-07dca489a/bin:/nix/store/vwh2qqal1q101wv4jy40giavp73q0msd-clang-wrapper-16.0.6/bin:/nix/store/3vzbr8yb4c233lhi1qz78b8kaaxrjqcj-clang-16.0.6/bin:/nix/store/pzajj7gw0nazs3vzp6jld53q8ird5izr-coreutils-9.4/bin:/nix/store/0i7w6qsij8akg6h39qn67w9ig5hirv1a-cctools-binutils-darwin-wrapper-16.0.6-973.0.1/bin:/nix/store/i4sfjfz08vmnrj84asl2j5imakga12za-cctools-binutils-darwin-16.0.6-973.0.1/bin:/nix/store/0xdyx9kjwkxpsb3hp0hivpw3rqcr2g6q-android-sdk-env/bin:/nix/store/rczwkkwi514iwlr6cygkm65cirkh5p99-autoconf-2.71/bin:/nix/store/rzfc5l7l2gjfl14lrj1hfmga5hsccr6b-automake-1.16.5/bin:/nix/store/42yck6r7y2jhcrd0ay0glz30w6pw4wzh-libtool-2.4.7/bin:/nix/store/x8i01zy4469z8ky4k1c7agix2vy8zssz-gnum4-1.4.19/bin:/nix/store/x1bzwj6pz7f3ajg5y36x07b1328jzx7r-file-5.45/bin:/nix/store/smnwjhgdxzww6ivm8jp660w2b4iybdfn-openvpn-2.5.8/bin:/nix/store/g7kcahmwnkl5y377pfc4br55y0lcifbd-openssl-3.0.12-bin/bin:/nix/store/7fqs4rrpjh376q1zmnc7bq2253pwigmp-lz4-1.9.4-bin/bin:/nix/store/pzajj7gw0nazs3vzp6jld53q8ird5izr-coreutils-9.4/bin:/nix/store/6x5inimwy8rlvf678yy080zccbw71alb-findutils-4.9.0/bin:/nix/store/01bzxsyn8dqz9fsdhp9r6ya796g5ydmf-diffutils-3.10/bin:/nix/store/9z9k8dwhhiryr7z2pz70zca0vwa15yqc-gnused-4.9/bin:/nix/store/zsm4xd527427rnjfnvfhvsld2n57b822-gnugrep-3.11/bin:/nix/store/hhc2x65zvp89lh15grqk21r6dcvifggy-gawk-5.2.2/bin:/nix/store/gclclfhq9blxp32lv8kxm9iv5060rx5f-gnutar-1.35/bin:/nix/store/crpi4clk07gy760ydbb710f74dy8q6c9-gzip-1.13/bin:/nix/store/qay0pa86lb712162d6m5lyw62iczb71d-bzip2-1.0.8-bin/bin:/nix/store/zc9qsb0rzlw0ckhy7097frcwb4pkfx3d-gnumake-4.4.1/bin:/nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21/bin:/nix/store/kizmwlnj40d11ixbap74c0syaqxn05wc-patch-2.7.6/bin:/nix/store/xcy0fr1dangwh9r9isay6fqbg91g5b3h-xz-5.4.5-bin/bin:/nix/store/x1bzwj6pz7f3ajg5y36x07b1328jzx7r-file-5.45/bin'
export PATH
PATH_LOCALE='/nix/store/5ll62p1j9pxzvgwsimpbjfy3jwq3cva3-adv_cmds-119-locale/share/locale'
export PATH_LOCALE
PKG_CONFIG='pkg-config'
export PKG_CONFIG
PKG_CONFIG_FOR_TARGET='pkg-config'
export PKG_CONFIG_FOR_TARGET
PKG_CONFIG_PATH='/nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev/lib/pkgconfig:/nix/store/xn84skq2pg1kf7f3xqddig02niqgdqxn-at-spi2-core-2.50.0-dev/lib/pkgconfig:/nix/store/43yyvcz4c5xyfssmdigc6i79br17v46c-dbus-1.14.10-dev/lib/pkgconfig:/nix/store/zsn9jjdmiwjwlz9k2dh0qpkfjy3v2vbm-expat-2.5.0-dev/lib/pkgconfig:/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev/lib/pkgconfig:/nix/store/d4bjk2zh5i2ddmh7qci5xxlxrq3317mi-zlib-1.3-dev/lib/pkgconfig:/nix/store/hkvxz4an6447hck7fjdidqq1wma2iqlm-libffi-3.4.4-dev/lib/pkgconfig:/nix/store/q79w9hbcs2hb2ijrq426bjkajb92kchi-cairo-1.18.0-dev/lib/pkgconfig:/nix/store/aw0f3vps9lw40hm97rgb27mchrrgc0l7-fontconfig-2.14.2-dev/lib/pkgconfig:/nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev/lib/pkgconfig:/nix/store/kjdsdv4ixlcya8c6bq877zmay152xjbh-bzip2-1.0.8-dev/lib/pkgconfig:/nix/store/1jfxww57qdfx88amyqrzx6r5cb47dn7v-brotli-1.1.0-dev/lib/pkgconfig:/nix/store/442pyslbwncqj5s5wl9fy683qbq1jpwk-libpng-apng-1.6.40-dev/lib/pkgconfig:/nix/store/nrpr0yxf3b2spbb46lm248r1li20fdfv-pixman-0.42.2/lib/pkgconfig:/nix/store/ndg357fgda648nn0m12ljgc3df4xxymx-libXext-1.3.5-dev/lib/pkgconfig:/nix/store/nqpwpdjjq87sq1pmwxklq21carnm2njk-xorgproto-2023.2/share/pkgconfig:/nix/store/cbk0s4xxmj727jydxz6ygs216fdanvmc-libXau-1.0.11-dev/lib/pkgconfig:/nix/store/6as89nw0s2r7nndahcfcqw9jic4wrsma-libXrender-0.9.11-dev/lib/pkgconfig:/nix/store/j03743d6f07fg1n8j734pqnyhmhwv29w-libX11-1.8.7-dev/lib/pkgconfig:/nix/store/90b2pjkljrzszcx8dcafp5cqk32xwl9g-libxcb-1.16-dev/lib/pkgconfig:/nix/store/rfphwxywgf9b8wlx1kszn9g7kcam3p1f-fribidi-1.0.13-dev/lib/pkgconfig:/nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev/lib/pkgconfig:/nix/store/l2nwx9828hkkpkcd56g6hy3yj3q8sqd6-libtiff-4.6.0-dev/lib/pkgconfig:/nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19/lib/pkgconfig:/nix/store/pavvbsnvvgvm98670b54y74awryhds91-libjpeg-turbo-2.1.5.1-dev/lib/pkgconfig:/nix/store/ffibfm2g5dcfkv1cfgykm73im0k4g0lh-xz-5.4.5-dev/lib/pkgconfig:/nix/store/q4gmlqr30cxazzkfc6bsd813b0galx5y-gsettings-desktop-schemas-45.0/share/pkgconfig:/nix/store/4ww4a7brsmkq6krmp7agag2smj077wl8-libICE-1.1.1-dev/lib/pkgconfig:/nix/store/c06r0kzg3whnln7p8x5byihfgy9cc45r-libSM-1.2.4-dev/lib/pkgconfig:/nix/store/hslvfzf1h08lh89rq036h863pqirb5hn-libXcomposite-0.4.6-dev/lib/pkgconfig:/nix/store/3pfbyajggx4ad4nf4kmrwalzmamhfxxc-libXfixes-6.0.1-dev/lib/pkgconfig:/nix/store/169hahjznv26hmm4i2prgqkzm420ra64-libXcursor-1.2.1-dev/lib/pkgconfig:/nix/store/ysdvcwki5ma3s8amqjknp038dd22zsmf-libXdamage-1.1.6-dev/lib/pkgconfig:/nix/store/5b11vk0gi9sljpxdw4crhp49fibixas2-libXi-1.8.1-dev/lib/pkgconfig:/nix/store/h687lsp21nzfd0x7nhyghyx72iww1jip-libXrandr-1.5.4-dev/lib/pkgconfig:/nix/store/04qgn2crlf1gn3aaphhqshf7ff9sdzwv-pango-1.51.0-dev/lib/pkgconfig:/nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev/lib/pkgconfig:/nix/store/h1x98ibx54wq8hldv48raz0jvqysdr4p-graphite2-1.3.14-dev/lib/pkgconfig:/nix/store/rw2vnhkzx95gg0yj9s572s1fxjb30d82-librsvg-2.57.0-dev/lib/pkgconfig:/nix/store/agkz3r22pqaf9qh11d5w0j8mmpkw1j5k-file-5.45-dev/lib/pkgconfig:/nix/store/93rvmf6ybl5c6bpk85r1rg08kygg5xi5-openssl-3.0.12-dev/lib/pkgconfig:/nix/store/f53fki355zpkj691y0id7ihw0drzzxib-lz4-1.9.4-dev/lib/pkgconfig:/nix/store/nc407vsv3124r9qlbahvxpvsplrzbc6m-lzo-2.10/lib/pkgconfig'
export PKG_CONFIG_PATH
PKG_CONFIG_PATH_FOR_TARGET='/nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev/lib/pkgconfig:/nix/store/xn84skq2pg1kf7f3xqddig02niqgdqxn-at-spi2-core-2.50.0-dev/lib/pkgconfig:/nix/store/43yyvcz4c5xyfssmdigc6i79br17v46c-dbus-1.14.10-dev/lib/pkgconfig:/nix/store/zsn9jjdmiwjwlz9k2dh0qpkfjy3v2vbm-expat-2.5.0-dev/lib/pkgconfig:/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev/lib/pkgconfig:/nix/store/d4bjk2zh5i2ddmh7qci5xxlxrq3317mi-zlib-1.3-dev/lib/pkgconfig:/nix/store/hkvxz4an6447hck7fjdidqq1wma2iqlm-libffi-3.4.4-dev/lib/pkgconfig:/nix/store/q79w9hbcs2hb2ijrq426bjkajb92kchi-cairo-1.18.0-dev/lib/pkgconfig:/nix/store/aw0f3vps9lw40hm97rgb27mchrrgc0l7-fontconfig-2.14.2-dev/lib/pkgconfig:/nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev/lib/pkgconfig:/nix/store/kjdsdv4ixlcya8c6bq877zmay152xjbh-bzip2-1.0.8-dev/lib/pkgconfig:/nix/store/1jfxww57qdfx88amyqrzx6r5cb47dn7v-brotli-1.1.0-dev/lib/pkgconfig:/nix/store/442pyslbwncqj5s5wl9fy683qbq1jpwk-libpng-apng-1.6.40-dev/lib/pkgconfig:/nix/store/nrpr0yxf3b2spbb46lm248r1li20fdfv-pixman-0.42.2/lib/pkgconfig:/nix/store/ndg357fgda648nn0m12ljgc3df4xxymx-libXext-1.3.5-dev/lib/pkgconfig:/nix/store/nqpwpdjjq87sq1pmwxklq21carnm2njk-xorgproto-2023.2/share/pkgconfig:/nix/store/cbk0s4xxmj727jydxz6ygs216fdanvmc-libXau-1.0.11-dev/lib/pkgconfig:/nix/store/6as89nw0s2r7nndahcfcqw9jic4wrsma-libXrender-0.9.11-dev/lib/pkgconfig:/nix/store/j03743d6f07fg1n8j734pqnyhmhwv29w-libX11-1.8.7-dev/lib/pkgconfig:/nix/store/90b2pjkljrzszcx8dcafp5cqk32xwl9g-libxcb-1.16-dev/lib/pkgconfig:/nix/store/rfphwxywgf9b8wlx1kszn9g7kcam3p1f-fribidi-1.0.13-dev/lib/pkgconfig:/nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev/lib/pkgconfig:/nix/store/l2nwx9828hkkpkcd56g6hy3yj3q8sqd6-libtiff-4.6.0-dev/lib/pkgconfig:/nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19/lib/pkgconfig:/nix/store/pavvbsnvvgvm98670b54y74awryhds91-libjpeg-turbo-2.1.5.1-dev/lib/pkgconfig:/nix/store/ffibfm2g5dcfkv1cfgykm73im0k4g0lh-xz-5.4.5-dev/lib/pkgconfig:/nix/store/q4gmlqr30cxazzkfc6bsd813b0galx5y-gsettings-desktop-schemas-45.0/share/pkgconfig:/nix/store/4ww4a7brsmkq6krmp7agag2smj077wl8-libICE-1.1.1-dev/lib/pkgconfig:/nix/store/c06r0kzg3whnln7p8x5byihfgy9cc45r-libSM-1.2.4-dev/lib/pkgconfig:/nix/store/hslvfzf1h08lh89rq036h863pqirb5hn-libXcomposite-0.4.6-dev/lib/pkgconfig:/nix/store/3pfbyajggx4ad4nf4kmrwalzmamhfxxc-libXfixes-6.0.1-dev/lib/pkgconfig:/nix/store/169hahjznv26hmm4i2prgqkzm420ra64-libXcursor-1.2.1-dev/lib/pkgconfig:/nix/store/ysdvcwki5ma3s8amqjknp038dd22zsmf-libXdamage-1.1.6-dev/lib/pkgconfig:/nix/store/5b11vk0gi9sljpxdw4crhp49fibixas2-libXi-1.8.1-dev/lib/pkgconfig:/nix/store/h687lsp21nzfd0x7nhyghyx72iww1jip-libXrandr-1.5.4-dev/lib/pkgconfig:/nix/store/04qgn2crlf1gn3aaphhqshf7ff9sdzwv-pango-1.51.0-dev/lib/pkgconfig:/nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev/lib/pkgconfig:/nix/store/h1x98ibx54wq8hldv48raz0jvqysdr4p-graphite2-1.3.14-dev/lib/pkgconfig:/nix/store/rw2vnhkzx95gg0yj9s572s1fxjb30d82-librsvg-2.57.0-dev/lib/pkgconfig:/nix/store/agkz3r22pqaf9qh11d5w0j8mmpkw1j5k-file-5.45-dev/lib/pkgconfig:/nix/store/93rvmf6ybl5c6bpk85r1rg08kygg5xi5-openssl-3.0.12-dev/lib/pkgconfig:/nix/store/f53fki355zpkj691y0id7ihw0drzzxib-lz4-1.9.4-dev/lib/pkgconfig:/nix/store/nc407vsv3124r9qlbahvxpvsplrzbc6m-lzo-2.10/lib/pkgconfig'
export PKG_CONFIG_PATH_FOR_TARGET
PS4='+ '
RANLIB='ranlib'
export RANLIB
SHELL='/nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21/bin/bash'
export SHELL
SIZE='size'
export SIZE
SOURCE_DATE_EPOCH='315532800'
export SOURCE_DATE_EPOCH
STRINGS='strings'
export STRINGS
STRIP='strip'
export STRIP
XDG_DATA_DIRS='/nix/store/xanxf5bwj0ddd7q34jlafask4475vvpr-pkg-config-wrapper-0.29.2/share:/nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev/share:/nix/store/xn84skq2pg1kf7f3xqddig02niqgdqxn-at-spi2-core-2.50.0-dev/share:/nix/store/565gbkm3ycyxb76vxirp3zz1xfqmwsga-expat-2.5.0/share:/nix/store/pdyvgkvhl9zcadg0c11x4ra6c188ih8j-dbus-1.14.10/share:/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev/share:/nix/store/z4by244ay1bc3axm8m4816jywfhf2v5w-zlib-1.3/share:/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1/share:/nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50/share:/nix/store/51ydyix8zv7psy475vwgckwakcwkkmfg-glib-2.78.1-bin/share:/nix/store/0i61f5s9yd5fnjcmci042zb7x1ij5w70-glib-2.78.1/share:/nix/store/8ca8nlcchkb15xkw71abyyg3y3jf2y95-at-spi2-core-2.50.0/share:/nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev/share:/nix/store/35m30y4ds947qxygsiz10zj5drpj0ky8-brotli-1.1.0/share:/nix/store/lcv3fcj0bn1ncs3rsp3p4g8zidph7gzs-freetype-2.13.2/share:/nix/store/ff680j3lhvla3q2w4s46jbm05l616pl9-fontconfig-2.14.2-bin/share:/nix/store/rh96ry7p3ym08d4a60dr769xcb7wzd4y-fontconfig-2.14.2-lib/share:/nix/store/nqpwpdjjq87sq1pmwxklq21carnm2njk-xorgproto-2023.2/share:/nix/store/jczjh812658cjl5mn0s4m82iqwivpg3m-libXau-1.0.11/share:/nix/store/cj0yijx1zfb1rxd10khsirb3n0hg6338-libX11-1.8.7/share:/nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev/share:/nix/store/84brri12ig6gr7zmp65h6wa1vknapbbj-gdk-pixbuf-2.42.10/share:/nix/store/q4gmlqr30cxazzkfc6bsd813b0galx5y-gsettings-desktop-schemas-45.0/share:/nix/store/lya90bjwvcyvxkawnc67anndjw4m78mz-libXfixes-6.0.1/share:/nix/store/69xihcx0zq4ggscb9j5qa76sy5yjfvmc-libXcomposite-0.4.6/share:/nix/store/6c6vlkzpvrgaw4xysb0lzflxifh3lp5v-libXcursor-1.2.1/share:/nix/store/36y9905cz6p482rqn9979ajlfyj0g4zy-libXrandr-1.5.4/share:/nix/store/04qgn2crlf1gn3aaphhqshf7ff9sdzwv-pango-1.51.0-dev/share:/nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev/share:/nix/store/h0q125hlrkvg57wjbp7d0345nx8wpgh6-graphite2-1.3.14/share:/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38/share:/nix/store/rw2vnhkzx95gg0yj9s572s1fxjb30d82-librsvg-2.57.0-dev/share:/nix/store/k7dhsrdpvrpnbsmq565zqflg75q9gqwb-librsvg-2.57.0/share:/nix/store/5fwdmpa7hbg04j9ivh6k49gy14igvm4j-rust-1.76.0-2024-02-04-07dca489a/share'
export XDG_DATA_DIRS
ZERO_AR_DATE='1'
export ZERO_AR_DATE
__darwinAllowLocalNetworking=''
export __darwinAllowLocalNetworking
__impureHostDeps='/bin/sh /usr/lib/libSystem.B.dylib /usr/lib/system/libunc.dylib /dev/zero /dev/random /dev/urandom /bin/sh'
export __impureHostDeps
__propagatedImpureHostDeps=''
export __propagatedImpureHostDeps
__propagatedSandboxProfile=''
export __propagatedSandboxProfile
__sandboxProfile=''
export __sandboxProfile
__structuredAttrs=''
export __structuredAttrs
buildInputs='/nix/store/0xdyx9kjwkxpsb3hp0hivpw3rqcr2g6q-android-sdk-env /nix/store/rczwkkwi514iwlr6cygkm65cirkh5p99-autoconf-2.71 /nix/store/rzfc5l7l2gjfl14lrj1hfmga5hsccr6b-automake-1.16.5 /nix/store/42yck6r7y2jhcrd0ay0glz30w6pw4wzh-libtool-2.4.7 /nix/store/xanxf5bwj0ddd7q34jlafask4475vvpr-pkg-config-wrapper-0.29.2 /nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev /nix/store/smnwjhgdxzww6ivm8jp660w2b4iybdfn-openvpn-2.5.8 /nix/store/93rvmf6ybl5c6bpk85r1rg08kygg5xi5-openssl-3.0.12-dev /nix/store/f53fki355zpkj691y0id7ihw0drzzxib-lz4-1.9.4-dev /nix/store/nc407vsv3124r9qlbahvxpvsplrzbc6m-lzo-2.10 /nix/store/h15b7gqa0ghxij93bvazf0wv0fdkxl6b-openpam-20170430'
export buildInputs
buildPhase='{ echo "------------------------------------------------------------";
  echo " WARNING: the existence of this path is not guaranteed.";
  echo " It is an internal implementation detail for pkgs.mkShell.";
  echo "------------------------------------------------------------";
  echo;
  # Record all build inputs as runtime dependencies
  export;
} >> "$out"
'
export buildPhase
builder='/nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21/bin/bash'
export builder
cmakeFlags=''
export cmakeFlags
configureFlags=''
export configureFlags
defaultBuildInputs='/nix/store/k16r6kq869aaqxihlw8899ly0rbsaws0-apple-framework-CoreFoundation-11.0.0'
defaultNativeBuildInputs='/nix/store/gh04z99llkk2f2a6763rbv28s20gkb8w-update-autotools-gnu-config-scripts-hook /nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh /nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh /nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh /nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh /nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh /nix/store/wzdsbnv2ba3nj91aql8jjdddfmkkdh7h-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh /nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh /nix/store/wmknncrif06fqxa16hpdldhixk95nds0-strip.sh /nix/store/vwh2qqal1q101wv4jy40giavp73q0msd-clang-wrapper-16.0.6'
depsBuildBuild=''
export depsBuildBuild
depsBuildBuildPropagated=''
export depsBuildBuildPropagated
depsBuildTarget=''
export depsBuildTarget
depsBuildTargetPropagated=''
export depsBuildTargetPropagated
depsHostHost=''
export depsHostHost
depsHostHostPropagated=''
export depsHostHostPropagated
depsTargetTarget=''
export depsTargetTarget
depsTargetTargetPropagated=''
export depsTargetTargetPropagated
doCheck=''
export doCheck
doInstallCheck=''
export doInstallCheck
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
declare -a envBuildBuildHooks=('gettextDataDirsHook' )
declare -a envBuildHostHooks=('gettextDataDirsHook' )
declare -a envBuildTargetHooks=('gettextDataDirsHook' )
declare -a envHostHostHooks=('pkgConfigWrapper_addPkgConfigPath' 'find_gio_modules' 'make_glib_find_gsettings_schemas' 'findGdkPixbufLoaders' 'ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' 'make_glib_find_gsettings_schemas' 'gettextDataDirsHook' 'findGdkPixbufLoaders' 'addAclocals' 'gettextDataDirsHook' )
declare -a envHostTargetHooks=('pkgConfigWrapper_addPkgConfigPath' 'find_gio_modules' 'make_glib_find_gsettings_schemas' 'findGdkPixbufLoaders' 'ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' 'make_glib_find_gsettings_schemas' 'gettextDataDirsHook' 'findGdkPixbufLoaders' 'addAclocals' 'gettextDataDirsHook' )
declare -a envTargetTargetHooks=('pkgConfigWrapper_addPkgConfigPath' 'make_glib_find_gsettings_schemas' )
declare -a fixupOutputHooks=('wrapGAppsHook' '_gtkCleanImmodulesCache' 'if [[ -z "${noAuditTmpdir-}" && -e "$prefix" ]]; then auditTmpdir "$prefix"; fi' 'if [ -z "${dontGzipMan-}" ]; then compressManPages "$prefix"; fi' '_moveLib64' '_moveSbin' '_moveSystemdUserUnits' 'patchShebangsAuto' '_pruneLibtoolFiles' '_doStrip' '_gtkCleanImmodulesCache' )
declare -a gappsWrapperArgs=()
guess='12'
initialPath='/nix/store/pzajj7gw0nazs3vzp6jld53q8ird5izr-coreutils-9.4 /nix/store/6x5inimwy8rlvf678yy080zccbw71alb-findutils-4.9.0 /nix/store/01bzxsyn8dqz9fsdhp9r6ya796g5ydmf-diffutils-3.10 /nix/store/9z9k8dwhhiryr7z2pz70zca0vwa15yqc-gnused-4.9 /nix/store/zsm4xd527427rnjfnvfhvsld2n57b822-gnugrep-3.11 /nix/store/hhc2x65zvp89lh15grqk21r6dcvifggy-gawk-5.2.2 /nix/store/gclclfhq9blxp32lv8kxm9iv5060rx5f-gnutar-1.35 /nix/store/crpi4clk07gy760ydbb710f74dy8q6c9-gzip-1.13 /nix/store/qay0pa86lb712162d6m5lyw62iczb71d-bzip2-1.0.8-bin /nix/store/zc9qsb0rzlw0ckhy7097frcwb4pkfx3d-gnumake-4.4.1 /nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21 /nix/store/kizmwlnj40d11ixbap74c0syaqxn05wc-patch-2.7.6 /nix/store/xcy0fr1dangwh9r9isay6fqbg91g5b3h-xz-5.4.5-bin /nix/store/x1bzwj6pz7f3ajg5y36x07b1328jzx7r-file-5.45'
maybe_dir='/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38/share/gsettings-schemas/gtk+3-3.24.38'
mesonFlags=''
export mesonFlags
name='nix-shell-env'
export name
nativeBuildInputs='/nix/store/xanxf5bwj0ddd7q34jlafask4475vvpr-pkg-config-wrapper-0.29.2 /nix/store/4s8irryjsy6j1bnrwg67f1bihw90k5hl-wrap-gapps-hook /nix/store/nc790d3aarw6c334ai035vla0kvcpc24-make-shell-wrapper-hook /nix/store/5fwdmpa7hbg04j9ivh6k49gy14igvm4j-rust-1.76.0-2024-02-04-07dca489a'
export nativeBuildInputs
out='/Users/niteshchowdharybalusu/Documents/openaws-vpn-client/outputs/out'
export out
outputBin='out'
outputDev='out'
outputDevdoc='REMOVE'
outputDevman='out'
outputDoc='out'
outputInclude='out'
outputInfo='out'
outputLib='out'
outputMan='out'
outputs='out'
export outputs
patches=''
export patches
phases='buildPhase'
export phases
pkg='/nix/store/k16r6kq869aaqxihlw8899ly0rbsaws0-apple-framework-CoreFoundation-11.0.0'
declare -a pkgsBuildBuild=()
declare -a pkgsBuildHost=('/nix/store/xanxf5bwj0ddd7q34jlafask4475vvpr-pkg-config-wrapper-0.29.2' '/nix/store/4s8irryjsy6j1bnrwg67f1bihw90k5hl-wrap-gapps-hook' '/nix/store/df1w9j3xj793mnrqamcpdy22h9j5518k-make-binary-wrapper-hook' '/nix/store/w2q60da1y7s50g0d319g5p610f676b5f-die-hook' '/nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev' '/nix/store/xn84skq2pg1kf7f3xqddig02niqgdqxn-at-spi2-core-2.50.0-dev' '/nix/store/43yyvcz4c5xyfssmdigc6i79br17v46c-dbus-1.14.10-dev' '/nix/store/zsn9jjdmiwjwlz9k2dh0qpkfjy3v2vbm-expat-2.5.0-dev' '/nix/store/565gbkm3ycyxb76vxirp3zz1xfqmwsga-expat-2.5.0' '/nix/store/j9gmkhrly2l4ixh7qr7z85aij1xr8znd-dbus-1.14.10-lib' '/nix/store/pdyvgkvhl9zcadg0c11x4ra6c188ih8j-dbus-1.14.10' '/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev' '/nix/store/d4bjk2zh5i2ddmh7qci5xxlxrq3317mi-zlib-1.3-dev' '/nix/store/z4by244ay1bc3axm8m4816jywfhf2v5w-zlib-1.3' '/nix/store/hkvxz4an6447hck7fjdidqq1wma2iqlm-libffi-3.4.4-dev' '/nix/store/xsjanj26r5c21krbrc5qpv89famgpkqj-libffi-3.4.4' '/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1' '/nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50' '/nix/store/51ydyix8zv7psy475vwgckwakcwkkmfg-glib-2.78.1-bin' '/nix/store/0i61f5s9yd5fnjcmci042zb7x1ij5w70-glib-2.78.1' '/nix/store/8ca8nlcchkb15xkw71abyyg3y3jf2y95-at-spi2-core-2.50.0' '/nix/store/q79w9hbcs2hb2ijrq426bjkajb92kchi-cairo-1.18.0-dev' '/nix/store/aw0f3vps9lw40hm97rgb27mchrrgc0l7-fontconfig-2.14.2-dev' '/nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev' '/nix/store/kjdsdv4ixlcya8c6bq877zmay152xjbh-bzip2-1.0.8-dev' '/nix/store/qay0pa86lb712162d6m5lyw62iczb71d-bzip2-1.0.8-bin' '/nix/store/c7bkc1ym3bi3qcbc5r5gbvf50pml1s7v-bzip2-1.0.8' '/nix/store/1jfxww57qdfx88amyqrzx6r5cb47dn7v-brotli-1.1.0-dev' '/nix/store/qqm58zqcqgcw4s77z794ayl7hf5qldp1-brotli-1.1.0-lib' '/nix/store/35m30y4ds947qxygsiz10zj5drpj0ky8-brotli-1.1.0' '/nix/store/442pyslbwncqj5s5wl9fy683qbq1jpwk-libpng-apng-1.6.40-dev' '/nix/store/4mn867vwmga3skpd5a2k7vwnzzj84ixn-libpng-apng-1.6.40' '/nix/store/lcv3fcj0bn1ncs3rsp3p4g8zidph7gzs-freetype-2.13.2' '/nix/store/ff680j3lhvla3q2w4s46jbm05l616pl9-fontconfig-2.14.2-bin' '/nix/store/rh96ry7p3ym08d4a60dr769xcb7wzd4y-fontconfig-2.14.2-lib' '/nix/store/nrpr0yxf3b2spbb46lm248r1li20fdfv-pixman-0.42.2' '/nix/store/ndg357fgda648nn0m12ljgc3df4xxymx-libXext-1.3.5-dev' '/nix/store/nqpwpdjjq87sq1pmwxklq21carnm2njk-xorgproto-2023.2' '/nix/store/cbk0s4xxmj727jydxz6ygs216fdanvmc-libXau-1.0.11-dev' '/nix/store/jczjh812658cjl5mn0s4m82iqwivpg3m-libXau-1.0.11' '/nix/store/p0vmcib5qprs2nn0ilc0idffhpp8y27i-libXext-1.3.5' '/nix/store/6as89nw0s2r7nndahcfcqw9jic4wrsma-libXrender-0.9.11-dev' '/nix/store/j03743d6f07fg1n8j734pqnyhmhwv29w-libX11-1.8.7-dev' '/nix/store/90b2pjkljrzszcx8dcafp5cqk32xwl9g-libxcb-1.16-dev' '/nix/store/b0zngcarpbmfzv9nzswvnc73s6b30zg6-libxcb-1.16' '/nix/store/cj0yijx1zfb1rxd10khsirb3n0hg6338-libX11-1.8.7' '/nix/store/zbz325qyfnh8w4fq7q0fr7fch92sb101-libXrender-0.9.11' '/nix/store/ciw2qpmcyj6lbl8acf32l7g9xqjzcrag-cairo-1.18.0' '/nix/store/rfphwxywgf9b8wlx1kszn9g7kcam3p1f-fribidi-1.0.13-dev' '/nix/store/sb7l967l821w0qr6238c10c69ksmjhr6-fribidi-1.0.13' '/nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev' '/nix/store/l2nwx9828hkkpkcd56g6hy3yj3q8sqd6-libtiff-4.6.0-dev' '/nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19' '/nix/store/pavvbsnvvgvm98670b54y74awryhds91-libjpeg-turbo-2.1.5.1-dev' '/nix/store/vqv02qxjpzms9rq90na1phifqgbpahr8-libjpeg-turbo-2.1.5.1-bin' '/nix/store/w2vl66w3737awmfvvx95ld93lkvnd7iv-libjpeg-turbo-2.1.5.1' '/nix/store/ffibfm2g5dcfkv1cfgykm73im0k4g0lh-xz-5.4.5-dev' '/nix/store/xcy0fr1dangwh9r9isay6fqbg91g5b3h-xz-5.4.5-bin' '/nix/store/ymrpm5a94dpjlzv75l249mfvahmf6s0m-xz-5.4.5' '/nix/store/pkinz04w5chvl71yk504g0nkljxpypbz-libtiff-4.6.0-bin' '/nix/store/bn0dw585sgzgvpq6pfhx7jahg46m48n0-libtiff-4.6.0' '/nix/store/84brri12ig6gr7zmp65h6wa1vknapbbj-gdk-pixbuf-2.42.10' '/nix/store/q4gmlqr30cxazzkfc6bsd813b0galx5y-gsettings-desktop-schemas-45.0' '/nix/store/4ww4a7brsmkq6krmp7agag2smj077wl8-libICE-1.1.1-dev' '/nix/store/dwfchcrc3k24nk0jjm6zlcnz264zhv9i-libICE-1.1.1' '/nix/store/c06r0kzg3whnln7p8x5byihfgy9cc45r-libSM-1.2.4-dev' '/nix/store/qz45zciq40avs3wmp6cnayhljj8qpblf-libSM-1.2.4' '/nix/store/hslvfzf1h08lh89rq036h863pqirb5hn-libXcomposite-0.4.6-dev' '/nix/store/3pfbyajggx4ad4nf4kmrwalzmamhfxxc-libXfixes-6.0.1-dev' '/nix/store/lya90bjwvcyvxkawnc67anndjw4m78mz-libXfixes-6.0.1' '/nix/store/69xihcx0zq4ggscb9j5qa76sy5yjfvmc-libXcomposite-0.4.6' '/nix/store/169hahjznv26hmm4i2prgqkzm420ra64-libXcursor-1.2.1-dev' '/nix/store/6c6vlkzpvrgaw4xysb0lzflxifh3lp5v-libXcursor-1.2.1' '/nix/store/ysdvcwki5ma3s8amqjknp038dd22zsmf-libXdamage-1.1.6-dev' '/nix/store/zd92197zl0zjz5fxp4h41iv65w777xfa-libXdamage-1.1.6' '/nix/store/5b11vk0gi9sljpxdw4crhp49fibixas2-libXi-1.8.1-dev' '/nix/store/223zgqa41lcl91fd951b68gxdh5dlcfl-libXi-1.8.1' '/nix/store/h687lsp21nzfd0x7nhyghyx72iww1jip-libXrandr-1.5.4-dev' '/nix/store/36y9905cz6p482rqn9979ajlfyj0g4zy-libXrandr-1.5.4' '/nix/store/04qgn2crlf1gn3aaphhqshf7ff9sdzwv-pango-1.51.0-dev' '/nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev' '/nix/store/h1x98ibx54wq8hldv48raz0jvqysdr4p-graphite2-1.3.14-dev' '/nix/store/h0q125hlrkvg57wjbp7d0345nx8wpgh6-graphite2-1.3.14' '/nix/store/062d63hbfmd6kbh9yikszzvq19z8sps2-harfbuzz-7.3.0' '/nix/store/1kvy8iiphp8p37f6k9h271vy4kqkyxhx-pango-1.51.0-bin' '/nix/store/bccwlwq250113qmid996v7nm6bi8v6s5-pango-1.51.0' '/nix/store/vwa8lcfi5dkj75qzrg06s7hwpsvnwpz6-apple-framework-Cocoa-11.0.0' '/nix/store/fc639c4xh8lglmifc3wvay5nf6krvq2f-apple-framework-AppKit-11.0.0' '/nix/store/n1mh4i0jm66zdkzgdnq236i4h7c3m3rp-apple-framework-ApplicationServices-11.0.0' '/nix/store/a0wk765b7r3y9zp0p0i1w8n0zzi28qbi-apple-framework-ColorSync-11.0.0' '/nix/store/ja18z0clxqzibsh4wal5rs5q4rg6k91k-apple-framework-CoreFoundation-11.0.0' '/nix/store/jamghc149d8bmzapam08ix18ch35199w-libobjc-11.0.0' '/nix/store/l9j1ib6jg3szi8ggr7xybf0r1wiksd2i-apple-framework-CoreGraphics-11.0.0' '/nix/store/m5f5v944r8pbsvfka4xiwfpsb4ad0ml3-apple-framework-IOKit-11.0.0' '/nix/store/kd3krx5pdhr1p9nwy38q2vw9bxr0pc4r-apple-framework-SystemConfiguration-11.0.0' '/nix/store/fcbhgkmxh513b3dfqax0riravqzk2r4f-apple-framework-Security-11.0.0' '/nix/store/nkyf1xpghrzgjj3772h0pypb3dp4kaz1-apple-lib-libDER' '/nix/store/7a2lmq1n3jkbag2v3z9fhwjfglrjal0b-apple-framework-CoreServices-11.0.0' '/nix/store/3jkl5xg6kdkn172a87iipn0qfn7xp8yk-apple-framework-CFNetwork-11.0.0' '/nix/store/5c4yhrpz1ckfvkxg4likdpsymcfrm1n6-apple-framework-CoreAudio-11.0.0' '/nix/store/jkk8chclqa7q4q8p2xvybqd59xm8s0gk-apple-framework-CoreAudioTypes-11.0.0' '/nix/store/b235b9zkzkw9h35xjirwyvlqvqk9bz5h-apple-framework-DiskArbitration-11.0.0' '/nix/store/ia966vyhfh2b1yv4nvl6glvpw6nr2c6h-apple-framework-NetFS-11.0.0' '/nix/store/4ks3xwsx26g78klnwzl5r69ywzhw97ni-apple-framework-ServiceManagement-11.0.0' '/nix/store/hrh7m7mq3qa9w0fgwrkm4y5r6adxxngm-apple-framework-CoreText-11.0.0' '/nix/store/vryibiz2jc5q02lcpnn7p068wskinj6g-apple-framework-ImageIO-11.0.0' '/nix/store/nzwkbjz3br3zwdxb346wy1plg6q84zmv-apple-framework-AudioToolbox-11.0.0' '/nix/store/jwbayarsn8zv6p65xabkhgn2ajd8xg7i-apple-private-framework-AudioToolboxCore-11.0.0' '/nix/store/9a9sp6ziyraxbrysah3b2qrpmvf7gpb0-apple-framework-Carbon-11.0.0' '/nix/store/vpilmiph4azwc5z375kr150rqvhcvamc-apple-framework-Foundation-11.0.0' '/nix/store/0b9gm6pj8x5j5f7y19iaxyivnh71w5kk-apple-framework-Combine-11.0.0' '/nix/store/61pk8hyq9c9k2vhxcvphzvd6ad6gy8hi-apple-framework-QuartzCore-11.0.0' '/nix/store/gjrcqzfq4qw1kpdmhaqn8g5k42rr96ym-apple-framework-CoreImage-11.0.0' '/nix/store/6sh4p0qcq8gbwj3499gw9r2601nv3j30-apple-framework-CoreVideo-11.0.0' '/nix/store/apxyw6zcf62h8a8z6wp6gnrng6w5lhh2-apple-framework-IOSurface-11.0.0' '/nix/store/h0xi670x8sgd8xcamzv7ywaibmmk7m2h-apple-framework-Metal-11.0.0' '/nix/store/dlwz4x9fpx6gn1kdrn6nb0rd36jhpxyf-apple-framework-OpenGL-11.0.0' '/nix/store/dlwz4x9fpx6gn1kdrn6nb0rd36jhpxyf-apple-framework-OpenGL-11.0.0' '/nix/store/mkq7i31cs50km0jvlskjbxwg4p2zcclb-apple-framework-OpenCL-11.0.0' '/nix/store/n7mzg4pfxng0m2j3lqhzlvv7jgcjx4py-apple-framework-CoreMIDI-11.0.0' '/nix/store/sbd4ky1bwb68sny2331pl78j3ll2dnac-apple-framework-AudioUnit-11.0.0' '/nix/store/w9pc4pis61n4m4kg7jq87sgfc5g4hdvx-apple-framework-CloudKit-11.0.0' '/nix/store/vbwcw3cm6lhjjjgqxc82j16i9hab5rfl-apple-framework-CoreLocation-11.0.0' '/nix/store/142giy09cz62l640vgqqgybrcm3s2ckm-apple-framework-CoreData-11.0.0' '/nix/store/i93br40mjwxwpqz0628clr305v4hcyxc-apple-private-framework-UIFoundation-11.0.0' '/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38' '/nix/store/rw2vnhkzx95gg0yj9s572s1fxjb30d82-librsvg-2.57.0-dev' '/nix/store/k7dhsrdpvrpnbsmq565zqflg75q9gqwb-librsvg-2.57.0' '/nix/store/nc790d3aarw6c334ai035vla0kvcpc24-make-shell-wrapper-hook' '/nix/store/5fwdmpa7hbg04j9ivh6k49gy14igvm4j-rust-1.76.0-2024-02-04-07dca489a' '/nix/store/gh04z99llkk2f2a6763rbv28s20gkb8w-update-autotools-gnu-config-scripts-hook' '/nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh' '/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh' '/nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh' '/nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh' '/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh' '/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh' '/nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh' '/nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh' '/nix/store/wzdsbnv2ba3nj91aql8jjdddfmkkdh7h-patch-shebangs.sh' '/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh' '/nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh' '/nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh' '/nix/store/wmknncrif06fqxa16hpdldhixk95nds0-strip.sh' '/nix/store/vwh2qqal1q101wv4jy40giavp73q0msd-clang-wrapper-16.0.6' '/nix/store/0i7w6qsij8akg6h39qn67w9ig5hirv1a-cctools-binutils-darwin-wrapper-16.0.6-973.0.1' )
declare -a pkgsBuildTarget=()
declare -a pkgsHostHost=('/nix/store/rw2vnhkzx95gg0yj9s572s1fxjb30d82-librsvg-2.57.0-dev' '/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev' '/nix/store/d4bjk2zh5i2ddmh7qci5xxlxrq3317mi-zlib-1.3-dev' '/nix/store/z4by244ay1bc3axm8m4816jywfhf2v5w-zlib-1.3' '/nix/store/hkvxz4an6447hck7fjdidqq1wma2iqlm-libffi-3.4.4-dev' '/nix/store/xsjanj26r5c21krbrc5qpv89famgpkqj-libffi-3.4.4' '/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1' '/nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50' '/nix/store/51ydyix8zv7psy475vwgckwakcwkkmfg-glib-2.78.1-bin' '/nix/store/0i61f5s9yd5fnjcmci042zb7x1ij5w70-glib-2.78.1' '/nix/store/b6b9ql62ll5cpcjzbjsqiz4h72963rza-gdk-pixbuf-2.42.10-dev' '/nix/store/l2nwx9828hkkpkcd56g6hy3yj3q8sqd6-libtiff-4.6.0-dev' '/nix/store/g95vgwgrbi3mf9xdfyq5wd8i3sa19n3q-libdeflate-1.19' '/nix/store/pavvbsnvvgvm98670b54y74awryhds91-libjpeg-turbo-2.1.5.1-dev' '/nix/store/vqv02qxjpzms9rq90na1phifqgbpahr8-libjpeg-turbo-2.1.5.1-bin' '/nix/store/w2vl66w3737awmfvvx95ld93lkvnd7iv-libjpeg-turbo-2.1.5.1' '/nix/store/ffibfm2g5dcfkv1cfgykm73im0k4g0lh-xz-5.4.5-dev' '/nix/store/xcy0fr1dangwh9r9isay6fqbg91g5b3h-xz-5.4.5-bin' '/nix/store/ymrpm5a94dpjlzv75l249mfvahmf6s0m-xz-5.4.5' '/nix/store/pkinz04w5chvl71yk504g0nkljxpypbz-libtiff-4.6.0-bin' '/nix/store/bn0dw585sgzgvpq6pfhx7jahg46m48n0-libtiff-4.6.0' '/nix/store/442pyslbwncqj5s5wl9fy683qbq1jpwk-libpng-apng-1.6.40-dev' '/nix/store/4mn867vwmga3skpd5a2k7vwnzzj84ixn-libpng-apng-1.6.40' '/nix/store/84brri12ig6gr7zmp65h6wa1vknapbbj-gdk-pixbuf-2.42.10' '/nix/store/q79w9hbcs2hb2ijrq426bjkajb92kchi-cairo-1.18.0-dev' '/nix/store/aw0f3vps9lw40hm97rgb27mchrrgc0l7-fontconfig-2.14.2-dev' '/nix/store/dfif3b61iz4rl79kdpidzry5bwv3rp7g-freetype-2.13.2-dev' '/nix/store/kjdsdv4ixlcya8c6bq877zmay152xjbh-bzip2-1.0.8-dev' '/nix/store/qay0pa86lb712162d6m5lyw62iczb71d-bzip2-1.0.8-bin' '/nix/store/c7bkc1ym3bi3qcbc5r5gbvf50pml1s7v-bzip2-1.0.8' '/nix/store/1jfxww57qdfx88amyqrzx6r5cb47dn7v-brotli-1.1.0-dev' '/nix/store/qqm58zqcqgcw4s77z794ayl7hf5qldp1-brotli-1.1.0-lib' '/nix/store/35m30y4ds947qxygsiz10zj5drpj0ky8-brotli-1.1.0' '/nix/store/lcv3fcj0bn1ncs3rsp3p4g8zidph7gzs-freetype-2.13.2' '/nix/store/ff680j3lhvla3q2w4s46jbm05l616pl9-fontconfig-2.14.2-bin' '/nix/store/rh96ry7p3ym08d4a60dr769xcb7wzd4y-fontconfig-2.14.2-lib' '/nix/store/nrpr0yxf3b2spbb46lm248r1li20fdfv-pixman-0.42.2' '/nix/store/ndg357fgda648nn0m12ljgc3df4xxymx-libXext-1.3.5-dev' '/nix/store/nqpwpdjjq87sq1pmwxklq21carnm2njk-xorgproto-2023.2' '/nix/store/cbk0s4xxmj727jydxz6ygs216fdanvmc-libXau-1.0.11-dev' '/nix/store/jczjh812658cjl5mn0s4m82iqwivpg3m-libXau-1.0.11' '/nix/store/p0vmcib5qprs2nn0ilc0idffhpp8y27i-libXext-1.3.5' '/nix/store/6as89nw0s2r7nndahcfcqw9jic4wrsma-libXrender-0.9.11-dev' '/nix/store/j03743d6f07fg1n8j734pqnyhmhwv29w-libX11-1.8.7-dev' '/nix/store/90b2pjkljrzszcx8dcafp5cqk32xwl9g-libxcb-1.16-dev' '/nix/store/b0zngcarpbmfzv9nzswvnc73s6b30zg6-libxcb-1.16' '/nix/store/cj0yijx1zfb1rxd10khsirb3n0hg6338-libX11-1.8.7' '/nix/store/zbz325qyfnh8w4fq7q0fr7fch92sb101-libXrender-0.9.11' '/nix/store/ciw2qpmcyj6lbl8acf32l7g9xqjzcrag-cairo-1.18.0' '/nix/store/k7dhsrdpvrpnbsmq565zqflg75q9gqwb-librsvg-2.57.0' '/nix/store/yknllaadhwvxzgwrawchkdvq8n1qly2h-gtk+3-3.24.38-dev' '/nix/store/xn84skq2pg1kf7f3xqddig02niqgdqxn-at-spi2-core-2.50.0-dev' '/nix/store/43yyvcz4c5xyfssmdigc6i79br17v46c-dbus-1.14.10-dev' '/nix/store/zsn9jjdmiwjwlz9k2dh0qpkfjy3v2vbm-expat-2.5.0-dev' '/nix/store/565gbkm3ycyxb76vxirp3zz1xfqmwsga-expat-2.5.0' '/nix/store/j9gmkhrly2l4ixh7qr7z85aij1xr8znd-dbus-1.14.10-lib' '/nix/store/pdyvgkvhl9zcadg0c11x4ra6c188ih8j-dbus-1.14.10' '/nix/store/8ca8nlcchkb15xkw71abyyg3y3jf2y95-at-spi2-core-2.50.0' '/nix/store/rfphwxywgf9b8wlx1kszn9g7kcam3p1f-fribidi-1.0.13-dev' '/nix/store/sb7l967l821w0qr6238c10c69ksmjhr6-fribidi-1.0.13' '/nix/store/q4gmlqr30cxazzkfc6bsd813b0galx5y-gsettings-desktop-schemas-45.0' '/nix/store/4ww4a7brsmkq6krmp7agag2smj077wl8-libICE-1.1.1-dev' '/nix/store/dwfchcrc3k24nk0jjm6zlcnz264zhv9i-libICE-1.1.1' '/nix/store/c06r0kzg3whnln7p8x5byihfgy9cc45r-libSM-1.2.4-dev' '/nix/store/qz45zciq40avs3wmp6cnayhljj8qpblf-libSM-1.2.4' '/nix/store/hslvfzf1h08lh89rq036h863pqirb5hn-libXcomposite-0.4.6-dev' '/nix/store/3pfbyajggx4ad4nf4kmrwalzmamhfxxc-libXfixes-6.0.1-dev' '/nix/store/lya90bjwvcyvxkawnc67anndjw4m78mz-libXfixes-6.0.1' '/nix/store/69xihcx0zq4ggscb9j5qa76sy5yjfvmc-libXcomposite-0.4.6' '/nix/store/169hahjznv26hmm4i2prgqkzm420ra64-libXcursor-1.2.1-dev' '/nix/store/6c6vlkzpvrgaw4xysb0lzflxifh3lp5v-libXcursor-1.2.1' '/nix/store/ysdvcwki5ma3s8amqjknp038dd22zsmf-libXdamage-1.1.6-dev' '/nix/store/zd92197zl0zjz5fxp4h41iv65w777xfa-libXdamage-1.1.6' '/nix/store/5b11vk0gi9sljpxdw4crhp49fibixas2-libXi-1.8.1-dev' '/nix/store/223zgqa41lcl91fd951b68gxdh5dlcfl-libXi-1.8.1' '/nix/store/h687lsp21nzfd0x7nhyghyx72iww1jip-libXrandr-1.5.4-dev' '/nix/store/36y9905cz6p482rqn9979ajlfyj0g4zy-libXrandr-1.5.4' '/nix/store/04qgn2crlf1gn3aaphhqshf7ff9sdzwv-pango-1.51.0-dev' '/nix/store/9vi8g2z53hc573c0w05lnyvb0k8mhnzd-harfbuzz-7.3.0-dev' '/nix/store/h1x98ibx54wq8hldv48raz0jvqysdr4p-graphite2-1.3.14-dev' '/nix/store/h0q125hlrkvg57wjbp7d0345nx8wpgh6-graphite2-1.3.14' '/nix/store/062d63hbfmd6kbh9yikszzvq19z8sps2-harfbuzz-7.3.0' '/nix/store/1kvy8iiphp8p37f6k9h271vy4kqkyxhx-pango-1.51.0-bin' '/nix/store/bccwlwq250113qmid996v7nm6bi8v6s5-pango-1.51.0' '/nix/store/vwa8lcfi5dkj75qzrg06s7hwpsvnwpz6-apple-framework-Cocoa-11.0.0' '/nix/store/fc639c4xh8lglmifc3wvay5nf6krvq2f-apple-framework-AppKit-11.0.0' '/nix/store/n1mh4i0jm66zdkzgdnq236i4h7c3m3rp-apple-framework-ApplicationServices-11.0.0' '/nix/store/a0wk765b7r3y9zp0p0i1w8n0zzi28qbi-apple-framework-ColorSync-11.0.0' '/nix/store/ja18z0clxqzibsh4wal5rs5q4rg6k91k-apple-framework-CoreFoundation-11.0.0' '/nix/store/jamghc149d8bmzapam08ix18ch35199w-libobjc-11.0.0' '/nix/store/l9j1ib6jg3szi8ggr7xybf0r1wiksd2i-apple-framework-CoreGraphics-11.0.0' '/nix/store/m5f5v944r8pbsvfka4xiwfpsb4ad0ml3-apple-framework-IOKit-11.0.0' '/nix/store/kd3krx5pdhr1p9nwy38q2vw9bxr0pc4r-apple-framework-SystemConfiguration-11.0.0' '/nix/store/fcbhgkmxh513b3dfqax0riravqzk2r4f-apple-framework-Security-11.0.0' '/nix/store/nkyf1xpghrzgjj3772h0pypb3dp4kaz1-apple-lib-libDER' '/nix/store/7a2lmq1n3jkbag2v3z9fhwjfglrjal0b-apple-framework-CoreServices-11.0.0' '/nix/store/3jkl5xg6kdkn172a87iipn0qfn7xp8yk-apple-framework-CFNetwork-11.0.0' '/nix/store/5c4yhrpz1ckfvkxg4likdpsymcfrm1n6-apple-framework-CoreAudio-11.0.0' '/nix/store/jkk8chclqa7q4q8p2xvybqd59xm8s0gk-apple-framework-CoreAudioTypes-11.0.0' '/nix/store/b235b9zkzkw9h35xjirwyvlqvqk9bz5h-apple-framework-DiskArbitration-11.0.0' '/nix/store/ia966vyhfh2b1yv4nvl6glvpw6nr2c6h-apple-framework-NetFS-11.0.0' '/nix/store/4ks3xwsx26g78klnwzl5r69ywzhw97ni-apple-framework-ServiceManagement-11.0.0' '/nix/store/hrh7m7mq3qa9w0fgwrkm4y5r6adxxngm-apple-framework-CoreText-11.0.0' '/nix/store/vryibiz2jc5q02lcpnn7p068wskinj6g-apple-framework-ImageIO-11.0.0' '/nix/store/nzwkbjz3br3zwdxb346wy1plg6q84zmv-apple-framework-AudioToolbox-11.0.0' '/nix/store/jwbayarsn8zv6p65xabkhgn2ajd8xg7i-apple-private-framework-AudioToolboxCore-11.0.0' '/nix/store/9a9sp6ziyraxbrysah3b2qrpmvf7gpb0-apple-framework-Carbon-11.0.0' '/nix/store/vpilmiph4azwc5z375kr150rqvhcvamc-apple-framework-Foundation-11.0.0' '/nix/store/0b9gm6pj8x5j5f7y19iaxyivnh71w5kk-apple-framework-Combine-11.0.0' '/nix/store/61pk8hyq9c9k2vhxcvphzvd6ad6gy8hi-apple-framework-QuartzCore-11.0.0' '/nix/store/gjrcqzfq4qw1kpdmhaqn8g5k42rr96ym-apple-framework-CoreImage-11.0.0' '/nix/store/6sh4p0qcq8gbwj3499gw9r2601nv3j30-apple-framework-CoreVideo-11.0.0' '/nix/store/apxyw6zcf62h8a8z6wp6gnrng6w5lhh2-apple-framework-IOSurface-11.0.0' '/nix/store/h0xi670x8sgd8xcamzv7ywaibmmk7m2h-apple-framework-Metal-11.0.0' '/nix/store/dlwz4x9fpx6gn1kdrn6nb0rd36jhpxyf-apple-framework-OpenGL-11.0.0' '/nix/store/dlwz4x9fpx6gn1kdrn6nb0rd36jhpxyf-apple-framework-OpenGL-11.0.0' '/nix/store/mkq7i31cs50km0jvlskjbxwg4p2zcclb-apple-framework-OpenCL-11.0.0' '/nix/store/n7mzg4pfxng0m2j3lqhzlvv7jgcjx4py-apple-framework-CoreMIDI-11.0.0' '/nix/store/sbd4ky1bwb68sny2331pl78j3ll2dnac-apple-framework-AudioUnit-11.0.0' '/nix/store/w9pc4pis61n4m4kg7jq87sgfc5g4hdvx-apple-framework-CloudKit-11.0.0' '/nix/store/vbwcw3cm6lhjjjgqxc82j16i9hab5rfl-apple-framework-CoreLocation-11.0.0' '/nix/store/142giy09cz62l640vgqqgybrcm3s2ckm-apple-framework-CoreData-11.0.0' '/nix/store/i93br40mjwxwpqz0628clr305v4hcyxc-apple-private-framework-UIFoundation-11.0.0' '/nix/store/4lhj2k116348w3zjvbffsam5fj8r00v5-gtk+3-3.24.38' '/nix/store/vx66p3752j69kl70z22rpwqbfg98labg-libcxx-16.0.6-dev' '/nix/store/p5wr7bxrs2naa4rwy9sqs19rljr7g7qh-libcxx-16.0.6' '/nix/store/a2knp1813k9mw8pir0y2jsavwdc8i6b7-libcxxabi-16.0.6-dev' '/nix/store/0w070w3a2azyy1gs4mgskz9j3pq0g5dy-libcxxabi-16.0.6' '/nix/store/bj94cxxlv3h57w85nvagymxg8n7fsy9i-compiler-rt-libc-16.0.6-dev' '/nix/store/bkisxa66nfr133rp78lf3nyg48r72z8d-compiler-rt-libc-16.0.6' )
declare -a pkgsHostTarget=('/nix/store/0xdyx9kjwkxpsb3hp0hivpw3rqcr2g6q-android-sdk-env' '/nix/store/rczwkkwi514iwlr6cygkm65cirkh5p99-autoconf-2.71' '/nix/store/rzfc5l7l2gjfl14lrj1hfmga5hsccr6b-automake-1.16.5' '/nix/store/42yck6r7y2jhcrd0ay0glz30w6pw4wzh-libtool-2.4.7' '/nix/store/x8i01zy4469z8ky4k1c7agix2vy8zssz-gnum4-1.4.19' '/nix/store/agkz3r22pqaf9qh11d5w0j8mmpkw1j5k-file-5.45-dev' '/nix/store/x1bzwj6pz7f3ajg5y36x07b1328jzx7r-file-5.45' '/nix/store/v2ambbfyvhdjip6qp8rz58ili4hhw0pk-libtool-2.4.7-lib' '/nix/store/xanxf5bwj0ddd7q34jlafask4475vvpr-pkg-config-wrapper-0.29.2' '/nix/store/lbhy50n02l04h3mdikhqsaaz8c6x5f3x-glib-2.78.1-dev' '/nix/store/d4bjk2zh5i2ddmh7qci5xxlxrq3317mi-zlib-1.3-dev' '/nix/store/z4by244ay1bc3axm8m4816jywfhf2v5w-zlib-1.3' '/nix/store/hkvxz4an6447hck7fjdidqq1wma2iqlm-libffi-3.4.4-dev' '/nix/store/xsjanj26r5c21krbrc5qpv89famgpkqj-libffi-3.4.4' '/nix/store/jkp27cvkfzy264pgmwgry17rkyi50m3r-gettext-0.21.1' '/nix/store/a78xnmg223s3iffja69ydg6sswbwd3i3-libiconv-50' '/nix/store/51ydyix8zv7psy475vwgckwakcwkkmfg-glib-2.78.1-bin' '/nix/store/0i61f5s9yd5fnjcmci042zb7x1ij5w70-glib-2.78.1' '/nix/store/smnwjhgdxzww6ivm8jp660w2b4iybdfn-openvpn-2.5.8' '/nix/store/93rvmf6ybl5c6bpk85r1rg08kygg5xi5-openssl-3.0.12-dev' '/nix/store/g7kcahmwnkl5y377pfc4br55y0lcifbd-openssl-3.0.12-bin' '/nix/store/8n81733fycf92j2229i4bq7zc59652pw-openssl-3.0.12' '/nix/store/f53fki355zpkj691y0id7ihw0drzzxib-lz4-1.9.4-dev' '/nix/store/7fqs4rrpjh376q1zmnc7bq2253pwigmp-lz4-1.9.4-bin' '/nix/store/jmvac9ibqb0ks00na76njb17rbzfranj-lz4-1.9.4' '/nix/store/nc407vsv3124r9qlbahvxpvsplrzbc6m-lzo-2.10' '/nix/store/h15b7gqa0ghxij93bvazf0wv0fdkxl6b-openpam-20170430' '/nix/store/k16r6kq869aaqxihlw8899ly0rbsaws0-apple-framework-CoreFoundation-11.0.0' '/nix/store/jamghc149d8bmzapam08ix18ch35199w-libobjc-11.0.0' )
declare -a pkgsTargetTarget=()
declare -a postFixupHooks=('_makeSymlinksRelativeInAllOutputs' '_multioutPropagateDev' )
declare -a postUnpackHooks=('_updateSourceDateEpochFromSourceRoot' )
declare -a preConfigureHooks=('forceLinkCoreFoundationFramework' '_multioutConfig' 'forceLinkCoreFoundationFramework' )
preConfigurePhases=' updateAutotoolsGnuConfigScriptsPhase'
declare -a preFixupHooks=('_moveToShare' '_multioutDocs' '_multioutDevs' )
preFixupPhases=' glibPreFixupPhase glibPreFixupPhase glibPreFixupPhase gappsWrapperArgsHook dropIconThemeCache   dropIconThemeCache '
preInstallPhases=' glibPreInstallPhase glibPreInstallPhase glibPreInstallPhase'
preferLocalBuild='1'
export preferLocalBuild
prefix='/Users/niteshchowdharybalusu/Documents/openaws-vpn-client/outputs/out'
declare -a propagatedBuildDepFiles=('propagated-build-build-deps' 'propagated-native-build-inputs' 'propagated-build-target-deps' )
propagatedBuildInputs=''
export propagatedBuildInputs
declare -a propagatedHostDepFiles=('propagated-host-host-deps' 'propagated-build-inputs' )
propagatedNativeBuildInputs=''
export propagatedNativeBuildInputs
declare -a propagatedTargetDepFiles=('propagated-target-target-deps' )
role_post=''
shell='/nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21/bin/bash'
export shell
shellHook=''
export shellHook
stdenv='/nix/store/sf52i9wcklk5i5f2w15p0kng8dq3qqwx-stdenv-darwin'
export stdenv
strictDeps=''
export strictDeps
stripDebugFlags='-S'
system='aarch64-darwin'
export system
declare -a unpackCmdHooks=('_defaultUnpack' )
_accumFlagsArray ()
{
 
    local name;
    if [ -n "$__structuredAttrs" ]; then
        for name in "$@";
        do
            local -n nameref="$name";
            flagsArray+=(${nameref+"${nameref[@]}"});
        done;
    else
        for name in "$@";
        do
            local -n nameref="$name";
            case "$name" in 
                *Array)
                    flagsArray+=(${nameref+"${nameref[@]}"})
                ;;
                *)
                    flagsArray+=(${nameref-})
                ;;
            esac;
        done;
    fi
}
_activatePkgs ()
{
 
    local hostOffset targetOffset;
    local pkg;
    for hostOffset in "${allPlatOffsets[@]}";
    do
        local pkgsVar="${pkgAccumVarVars[hostOffset + 1]}";
        for targetOffset in "${allPlatOffsets[@]}";
        do
            (( hostOffset <= targetOffset )) || continue;
            local pkgsRef="${pkgsVar}[$targetOffset - $hostOffset]";
            local pkgsSlice="${!pkgsRef}[@]";
            for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
            do
                activatePackage "$pkg" "$hostOffset" "$targetOffset";
            done;
        done;
    done
}
_addRpathPrefix ()
{
 
    if [ "${NIX_NO_SELF_RPATH:-0}" != 1 ]; then
        export NIX_LDFLAGS="-rpath $1/lib ${NIX_LDFLAGS-}";
    fi
}
_addToEnv ()
{
 
    local depHostOffset depTargetOffset;
    local pkg;
    for depHostOffset in "${allPlatOffsets[@]}";
    do
        local hookVar="${pkgHookVarVars[depHostOffset + 1]}";
        local pkgsVar="${pkgAccumVarVars[depHostOffset + 1]}";
        for depTargetOffset in "${allPlatOffsets[@]}";
        do
            (( depHostOffset <= depTargetOffset )) || continue;
            local hookRef="${hookVar}[$depTargetOffset - $depHostOffset]";
            if [[ -z "${strictDeps-}" ]]; then
                local visitedPkgs="";
                for pkg in "${pkgsBuildBuild[@]}" "${pkgsBuildHost[@]}" "${pkgsBuildTarget[@]}" "${pkgsHostHost[@]}" "${pkgsHostTarget[@]}" "${pkgsTargetTarget[@]}";
                do
                    if [[ "$visitedPkgs" = *"$pkg"* ]]; then
                        continue;
                    fi;
                    runHook "${!hookRef}" "$pkg";
                    visitedPkgs+=" $pkg";
                done;
            else
                local pkgsRef="${pkgsVar}[$depTargetOffset - $depHostOffset]";
                local pkgsSlice="${!pkgsRef}[@]";
                for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
                do
                    runHook "${!hookRef}" "$pkg";
                done;
            fi;
        done;
    done
}
_allFlags ()
{
 
    export system pname name version;
    for varName in $(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }');
    do
        if (( "${NIX_DEBUG:-0}" >= 1 )); then
            printf "@%s@ -> %q\n" "${varName}" "${!varName}" 1>&2;
        fi;
        args+=("--subst-var" "$varName");
    done
}
_assignFirst ()
{
 
    local varName="$1";
    local _var;
    local REMOVE=REMOVE;
    shift;
    for _var in "$@";
    do
        if [ -n "${!_var-}" ]; then
            eval "${varName}"="${_var}";
            return;
        fi;
    done;
    echo;
    echo "error: _assignFirst: could not find a non-empty variable whose name to assign to ${varName}.";
    echo "       The following variables were all unset or empty:";
    echo "           $*";
    if [ -z "${out:-}" ]; then
        echo '       If you do not want an "out" output in your derivation, make sure to define';
        echo '       the other specific required outputs. This can be achieved by picking one';
        echo "       of the above as an output.";
        echo '       You do not have to remove "out" if you want to have a different default';
        echo '       output, because the first output is taken as a default.';
        echo;
    fi;
    return 1
}
_callImplicitHook ()
{
 
    local def="$1";
    local hookName="$2";
    if declare -F "$hookName" > /dev/null; then
        "$hookName";
    else
        if type -p "$hookName" > /dev/null; then
            source "$hookName";
        else
            if [ -n "${!hookName:-}" ]; then
                eval "${!hookName}";
            else
                return "$def";
            fi;
        fi;
    fi
}
_defaultUnpack ()
{
 
    local fn="$1";
    local destination;
    if [ -d "$fn" ]; then
        destination="$(stripHash "$fn")";
        if [ -e "$destination" ]; then
            echo "Cannot copy $fn to $destination: destination already exists!";
            echo "Did you specify two \"srcs\" with the same \"name\"?";
            return 1;
        fi;
        cp -pr --reflink=auto -- "$fn" "$destination";
    else
        case "$fn" in 
            *.tar.xz | *.tar.lzma | *.txz)
                xz -d < "$fn" | tar xf - --warning=no-timestamp
            ;;
            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)
                tar xf "$fn" --warning=no-timestamp
            ;;
            *)
                return 1
            ;;
        esac;
    fi
}
_doStrip ()
{
 
    local -ra flags=(dontStripHost dontStripTarget);
    local -ra debugDirs=(stripDebugList stripDebugListTarget);
    local -ra allDirs=(stripAllList stripAllListTarget);
    local -ra stripCmds=(STRIP STRIP_FOR_TARGET);
    local -ra ranlibCmds=(RANLIB RANLIB_FOR_TARGET);
    stripDebugList=${stripDebugList[*]:-lib lib32 lib64 libexec bin sbin};
    stripDebugListTarget=${stripDebugListTarget[*]:-};
    stripAllList=${stripAllList[*]:-};
    stripAllListTarget=${stripAllListTarget[*]:-};
    local i;
    for i in ${!stripCmds[@]};
    do
        local -n flag="${flags[$i]}";
        local -n debugDirList="${debugDirs[$i]}";
        local -n allDirList="${allDirs[$i]}";
        local -n stripCmd="${stripCmds[$i]}";
        local -n ranlibCmd="${ranlibCmds[$i]}";
        if [[ -n "${dontStrip-}" || -n "${flag-}" ]] || ! type -f "${stripCmd-}" 2> /dev/null 1>&2; then
            continue;
        fi;
        stripDirs "$stripCmd" "$ranlibCmd" "$debugDirList" "${stripDebugFlags[*]:--S -p}";
        stripDirs "$stripCmd" "$ranlibCmd" "$allDirList" "${stripAllFlags[*]:--s -p}";
    done
}
_eval ()
{
 
    if declare -F "$1" > /dev/null 2>&1; then
        "$@";
    else
        eval "$1";
    fi
}
_gtkCleanImmodulesCache ()
{
 
    local f="${prefix:?}/lib/gtk-3.0/3.0.0/immodules.cache";
    if [ -f "$f" ]; then
        sed 's|Created by .*bin/gtk-query-|Created by bin/gtk-query-|' -i "$f";
    fi
}
_makeSymlinksRelative ()
{
 
    local symlinkTarget;
    if [ "${dontRewriteSymlinks-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    while IFS= read -r -d '' f; do
        symlinkTarget=$(readlink "$f");
        if [[ "$symlinkTarget"/ != "$prefix"/* ]]; then
            continue;
        fi;
        if [ ! -e "$symlinkTarget" ]; then
            echo "the symlink $f is broken, it points to $symlinkTarget (which is missing)";
        fi;
        echo "rewriting symlink $f to be relative to $prefix";
        ln -snrf "$symlinkTarget" "$f";
    done < <(find $prefix -type l -print0)
}
_makeSymlinksRelativeInAllOutputs ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" _makeSymlinksRelative;
    done
}
_moveLib64 ()
{
 
    if [ "${dontMoveLib64-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/lib64" -o -L "$prefix/lib64" ]; then
        return;
    fi;
    echo "moving $prefix/lib64/* to $prefix/lib";
    mkdir -p $prefix/lib;
    shopt -s dotglob;
    for i in $prefix/lib64/*;
    do
        mv --no-clobber "$i" $prefix/lib;
    done;
    shopt -u dotglob;
    rmdir $prefix/lib64;
    ln -s lib $prefix/lib64
}
_moveSbin ()
{
 
    if [ "${dontMoveSbin-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/sbin" -o -L "$prefix/sbin" ]; then
        return;
    fi;
    echo "moving $prefix/sbin/* to $prefix/bin";
    mkdir -p $prefix/bin;
    shopt -s dotglob;
    for i in $prefix/sbin/*;
    do
        mv "$i" $prefix/bin;
    done;
    shopt -u dotglob;
    rmdir $prefix/sbin;
    ln -s bin $prefix/sbin
}
_moveSystemdUserUnits ()
{
 
    if [ "${dontMoveSystemdUserUnits:-0}" = 1 ]; then
        return;
    fi;
    if [ ! -e "${prefix:?}/lib/systemd/user" ]; then
        return;
    fi;
    local source="$prefix/lib/systemd/user";
    local target="$prefix/share/systemd/user";
    echo "moving $source/* to $target";
    mkdir -p "$target";
    ( shopt -s dotglob;
    for i in "$source"/*;
    do
        mv "$i" "$target";
    done );
    rmdir "$source";
    ln -s "$target" "$source"
}
_moveToShare ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        if [ -z "${forceShare-}" ]; then
            forceShare=(man doc info);
        fi;
    else
        forceShare=(${forceShare:-man doc info});
    fi;
    if [[ -z "$out" ]]; then
        return;
    fi;
    for d in "${forceShare[@]}";
    do
        if [ -d "$out/$d" ]; then
            if [ -d "$out/share/$d" ]; then
                echo "both $d/ and share/$d/ exist!";
            else
                echo "moving $out/$d to $out/share/$d";
                mkdir -p $out/share;
                mv $out/$d $out/share/;
            fi;
        fi;
    done
}
_multioutConfig ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${setOutputFlags-1}" ]; then
        return;
    fi;
    if [ -z "${shareDocName:-}" ]; then
        local confScript="${configureScript:-}";
        if [ -z "$confScript" ] && [ -x ./configure ]; then
            confScript=./configure;
        fi;
        if [ -f "$confScript" ]; then
            local shareDocName="$(sed -n "s/^PACKAGE_TARNAME='\(.*\)'$/\1/p" < "$confScript")";
        fi;
        if [ -z "$shareDocName" ] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_-]'; then
            shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
        fi;
    fi;
    prependToVar configureFlags --bindir="${!outputBin}"/bin --sbindir="${!outputBin}"/sbin --includedir="${!outputInclude}"/include --oldincludedir="${!outputInclude}"/include --mandir="${!outputMan}"/share/man --infodir="${!outputInfo}"/share/info --docdir="${!outputDoc}"/share/doc/"${shareDocName}" --libdir="${!outputLib}"/lib --libexecdir="${!outputLib}"/libexec --localedir="${!outputLib}"/share/locale;
    prependToVar installFlags pkgconfigdir="${!outputDev}"/lib/pkgconfig m4datadir="${!outputDev}"/share/aclocal aclocaldir="${!outputDev}"/share/aclocal
}
_multioutDevs ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${moveToDev-1}" ]; then
        return;
    fi;
    moveToOutput include "${!outputInclude}";
    moveToOutput lib/pkgconfig "${!outputDev}";
    moveToOutput share/pkgconfig "${!outputDev}";
    moveToOutput lib/cmake "${!outputDev}";
    moveToOutput share/aclocal "${!outputDev}";
    for f in "${!outputDev}"/{lib,share}/pkgconfig/*.pc;
    do
        echo "Patching '$f' includedir to output ${!outputInclude}";
        sed -i "/^includedir=/s,=\${prefix},=${!outputInclude}," "$f";
    done
}
_multioutDocs ()
{
 
    local REMOVE=REMOVE;
    moveToOutput share/info "${!outputInfo}";
    moveToOutput share/doc "${!outputDoc}";
    moveToOutput share/gtk-doc "${!outputDevdoc}";
    moveToOutput share/devhelp/books "${!outputDevdoc}";
    moveToOutput share/man "${!outputMan}";
    moveToOutput share/man/man3 "${!outputDevman}"
}
_multioutPropagateDev ()
{
 
    if [ "$(getAllOutputNames)" = "out" ]; then
        return;
    fi;
    local outputFirst;
    for outputFirst in $(getAllOutputNames);
    do
        break;
    done;
    local propagaterOutput="$outputDev";
    if [ -z "$propagaterOutput" ]; then
        propagaterOutput="$outputFirst";
    fi;
    if [ -z "${propagatedBuildOutputs+1}" ]; then
        local po_dirty="$outputBin $outputInclude $outputLib";
        set +o pipefail;
        propagatedBuildOutputs=`echo "$po_dirty"             | tr -s ' ' '\n' | grep -v -F "$propagaterOutput"             | sort -u | tr '\n' ' ' `;
        set -o pipefail;
    fi;
    if [ -z "$propagatedBuildOutputs" ]; then
        return;
    fi;
    mkdir -p "${!propagaterOutput}"/nix-support;
    for output in $propagatedBuildOutputs;
    do
        echo -n " ${!output}" >> "${!propagaterOutput}"/nix-support/propagated-build-inputs;
    done
}
_overrideFirst ()
{
 
    if [ -z "${!1-}" ]; then
        _assignFirst "$@";
    fi
}
_pruneLibtoolFiles ()
{
 
    if [ "${dontPruneLibtoolFiles-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    find "$prefix" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \; -exec grep -q "^old_library=''" {} \; -exec sed -i {} -e "/^dependency_libs='[^']/ c dependency_libs='' #pruned" \;
}
_updateSourceDateEpochFromSourceRoot ()
{
 
    if [ -n "$sourceRoot" ]; then
        updateSourceDateEpoch "$sourceRoot";
    fi
}
activatePackage ()
{
 
    local pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    if [ -f "$pkg" ]; then
        source "$pkg";
    fi;
    if [[ -z "${strictDeps-}" || "$hostOffset" -le -1 ]]; then
        addToSearchPath _PATH "$pkg/bin";
    fi;
    if (( hostOffset <= -1 )); then
        addToSearchPath _XDG_DATA_DIRS "$pkg/share";
    fi;
    if [[ "$hostOffset" -eq 0 && -d "$pkg/bin" ]]; then
        addToSearchPath _HOST_PATH "$pkg/bin";
    fi;
    if [[ -f "$pkg/nix-support/setup-hook" ]]; then
        source "$pkg/nix-support/setup-hook";
    fi
}
addAclocals ()
{
 
    addToSearchPathWithCustomDelimiter : ACLOCAL_PATH $1/share/aclocal
}
addEnvHooks ()
{
 
    local depHostOffset="$1";
    shift;
    local pkgHookVarsSlice="${pkgHookVarVars[$depHostOffset + 1]}[@]";
    local pkgHookVar;
    for pkgHookVar in "${!pkgHookVarsSlice}";
    do
        eval "${pkgHookVar}s"'+=("$@")';
    done
}
addFlags ()
{
 
    local n flag before after var;
    local reenableGlob=0;
    if [[ ! -o noglob ]]; then
        reenableGlob=1;
    fi;
    set -o noglob;
    before=($1) after=($2);
    if (( reenableGlob )); then
        set +o noglob;
    fi;
    var="argv_tmp";
    printf '%s\n' "char **$var = calloc(${#before[@]} + argc + ${#after[@]} + 1, sizeof(*$var));";
    printf '%s\n' "assert($var != NULL);";
    printf '%s\n' "${var}[0] = argv[0];";
    for ((n = 0; n < ${#before[@]}; n += 1))
    do
        flag=$(escapeStringLiteral "${before[n]}");
        printf '%s\n' "${var}[$((n + 1))] = \"$flag\";";
    done;
    printf '%s\n' "for (int i = 1; i < argc; ++i) {";
    printf '%s\n' "    ${var}[${#before[@]} + i] = argv[i];";
    printf '%s\n' "}";
    for ((n = 0; n < ${#after[@]}; n += 1))
    do
        flag=$(escapeStringLiteral "${after[n]}");
        printf '%s\n' "${var}[${#before[@]} + argc + $n] = \"$flag\";";
    done;
    printf '%s\n' "${var}[${#before[@]} + argc + ${#after[@]}] = NULL;";
    printf '%s\n' "argv = $var;"
}
addSuffix ()
{
 
    suffix="$1";
    shift;
    for name in "$@";
    do
        echo "$name$suffix";
    done
}
addToSearchPath ()
{
 
    addToSearchPathWithCustomDelimiter ":" "$@"
}
addToSearchPathWithCustomDelimiter ()
{
 
    local delimiter="$1";
    local varName="$2";
    local dir="$3";
    if [[ -d "$dir" && "${!varName:+${delimiter}${!varName}${delimiter}}" != *"${delimiter}${dir}${delimiter}"* ]]; then
        export "${varName}=${!varName:+${!varName}${delimiter}}${dir}";
    fi
}
appendToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if declare -p "$1" 2> /dev/null | grep -q '^'; then
        type="$(declare -p "$1")";
        if [[ "$type" =~ "declare -A" ]]; then
            echo "appendToVar(): ERROR: trying to use appendToVar on an associative array, use variable+=([\"X\"]=\"Y\") instead." 1>&2;
            return 1;
        else
            if [[ "$type" =~ "declare -a" ]]; then
                useArray=true;
            else
                useArray=false;
            fi;
        fi;
    fi;
    shift;
    if $useArray; then
        nameref=(${nameref+"${nameref[@]}"} "$@");
    else
        nameref="${nameref-} $*";
    fi
}
assertExecutable ()
{
 
    local file="$1";
    [[ -f "$file" && -x "$file" ]] || die "Cannot wrap '$file' because it is not an executable file"
}
assertValidEnvName ()
{
 
    case "$1" in 
        *=*)
            printf '\n%s\n' "#error Illegal environment variable name \`$1\` (cannot contain \`=\`)"
        ;;
        "")
            printf '\n%s\n' "#error Environment variable name can't be empty."
        ;;
    esac
}
auditTmpdir ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "checking for references to $TMPDIR/ in $dir...";
    local i;
    find "$dir" -type f -print0 | while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if isELF "$i"; then
            if { 
                printf :;
                patchelf --print-rpath "$i"
            } | grep -q -F ":$TMPDIR/"; then
                echo "RPATH of binary $i contains a forbidden reference to $TMPDIR/";
                exit 1;
            fi;
        fi;
        if isScript "$i"; then
            if [ -e "$(dirname "$i")/.$(basename "$i")-wrapped" ]; then
                if grep -q -F "$TMPDIR/" "$i"; then
                    echo "wrapper script $i contains a forbidden reference to $TMPDIR/";
                    exit 1;
                fi;
            fi;
        fi;
    done
}
bintoolsWrapper_addLDVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [[ -d "$1/lib64" && ! -L "$1/lib64" ]]; then
        export NIX_LDFLAGS${role_post}+=" -L$1/lib64";
    fi;
    if [[ -d "$1/lib" ]]; then
        local -a glob=($1/lib/lib*);
        if [ "${#glob[*]}" -gt 0 ]; then
            export NIX_LDFLAGS${role_post}+=" -L$1/lib";
        fi;
    fi
}
buildPhase ()
{
 
    runHook preBuild;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom buildPhase, doing nothing";
    else
        foundMakefile=1;
        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
        _accumFlagsArray makeFlags makeFlagsArray buildFlags buildFlagsArray;
        echoCmd 'build flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postBuild
}
ccWrapper_addCVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [ -d "$1/include" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -isystem $1/include";
    fi;
    if [ -d "$1/Library/Frameworks" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -iframework $1/Library/Frameworks";
    fi
}
changeDir ()
{
 
    local dir;
    dir=$(escapeStringLiteral "$1");
    printf '%s' "assert_success(chdir(\"$dir\"));"
}
checkPhase ()
{
 
    runHook preCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom checkPhase, doing nothing";
        runHook postCheck;
        return;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then
            checkTarget=check;
        else
            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then
                checkTarget=test;
            fi;
        fi;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        echo "no check/test target in ${makefile:-Makefile}, doing nothing";
    else
        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
        _accumFlagsArray makeFlags makeFlagsArray;
        if [ -n "$__structuredAttrs" ]; then
            flagsArray+=("${checkFlags[@]:-VERBOSE=y}");
        else
            flagsArray+=(${checkFlags:-VERBOSE=y});
        fi;
        _accumFlagsArray checkFlagsArray;
        flagsArray+=(${checkTarget});
        echoCmd 'check flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postCheck
}
compressManPages ()
{
 
    local dir="$1";
    if [ -L "$dir"/share ] || [ -L "$dir"/share/man ] || [ ! -d "$dir/share/man" ]; then
        return;
    fi;
    echo "gzipping man pages under $dir/share/man/";
    find "$dir"/share/man/ -type f -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | while IFS= read -r -d '' f; do
        if gzip -c -n "$f" > "$f".gz; then
            rm "$f";
        else
            rm "$f".gz;
        fi;
    done;
    find "$dir"/share/man/ -type l -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | sort -z | while IFS= read -r -d '' f; do
        local target;
        target="$(readlink -f "$f")";
        if [ -f "$target".gz ]; then
            ln -sf "$target".gz "$f".gz && rm "$f";
        fi;
    done
}
configurePhase ()
{
 
    runHook preConfigure;
    : "${configureScript=}";
    if [[ -z "$configureScript" && -x ./configure ]]; then
        configureScript=./configure;
    fi;
    if [ -z "${dontFixLibtool:-}" ]; then
        export lt_cv_deplibs_check_method="${lt_cv_deplibs_check_method-pass_all}";
        local i;
        find . -iname "ltmain.sh" -print0 | while IFS='' read -r -d '' i; do
            echo "fixing libtool script $i";
            fixLibtool "$i";
        done;
        CONFIGURE_MTIME_REFERENCE=$(mktemp configure.mtime.reference.XXXXXX);
        find . -executable -type f -name configure -exec grep -l 'GNU Libtool is free software; you can redistribute it and/or modify' {} \; -exec touch -r {} "$CONFIGURE_MTIME_REFERENCE" \; -exec sed -i s_/usr/bin/file_file_g {} \; -exec touch -r "$CONFIGURE_MTIME_REFERENCE" {} \;;
        rm -f "$CONFIGURE_MTIME_REFERENCE";
    fi;
    if [[ -z "${dontAddPrefix:-}" && -n "$prefix" ]]; then
        prependToVar configureFlags "${prefixKey:---prefix=}$prefix";
    fi;
    if [[ -f "$configureScript" ]]; then
        if [ -z "${dontAddDisableDepTrack:-}" ]; then
            if grep -q dependency-tracking "$configureScript"; then
                prependToVar configureFlags --disable-dependency-tracking;
            fi;
        fi;
        if [ -z "${dontDisableStatic:-}" ]; then
            if grep -q enable-static "$configureScript"; then
                prependToVar configureFlags --disable-static;
            fi;
        fi;
        if [ -z "${dontPatchShebangsInConfigure:-}" ]; then
            patchShebangs --build "$configureScript";
        fi;
    fi;
    if [ -n "$configureScript" ]; then
        local -a flagsArray;
        _accumFlagsArray configureFlags configureFlagsArray;
        echoCmd 'configure flags' "${flagsArray[@]}";
        $configureScript "${flagsArray[@]}";
        unset flagsArray;
    else
        echo "no configure script, doing nothing";
    fi;
    runHook postConfigure
}
consumeEntire ()
{
 
    if IFS='' read -r -d '' "$1"; then
        echo "consumeEntire(): ERROR: Input null bytes, won't process" 1>&2;
        return 1;
    fi
}
die ()
{
 
    set +e;
    printf "\nBuilder called die: %b\n" "$*";
    printf "Backtrace:\n";
    local frame=0;
    while caller $frame; do
        ((frame++));
    done;
    printf "\n";
    exit 1
}
distPhase ()
{
 
    runHook preDist;
    local flagsArray=();
    _accumFlagsArray distFlags distFlagsArray;
    flagsArray+=(${distTarget:-dist});
    echo 'dist flags: %q' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    if [ "${dontCopyDist:-0}" != 1 ]; then
        mkdir -p "$out/tarballs";
        cp -pvd ${tarballs[*]:-*.tar.gz} "$out/tarballs";
    fi;
    runHook postDist
}
docstring ()
{
 
    printf '%s' "const char * DOCSTRING = \"$(escapeStringLiteral "


# ------------------------------------------------------------------------------------
# The C-code for this binary wrapper has been generated using the following command:


makeCWrapper $(formatArgs "$@")


# (Use \`nix-shell -p makeBinaryWrapper\` to get access to makeCWrapper in your shell)
# ------------------------------------------------------------------------------------


")\";"
}
dropIconThemeCache ()
{
 
    if [[ -z "${dontDropIconThemeCache:-}" ]]; then
        local icondir="${out:?}/share/icons";
        if [[ -d "${icondir}" ]]; then
            find "${icondir}" -name 'icon-theme.cache' -print0 | while IFS= read -r -d '' file; do
                echo "Removing ${file}";
                rm -f "${file}";
            done;
        fi;
    fi
}
dumpVars ()
{
 
    if [ "${noDumpEnvVars:-0}" != 1 ]; then
        export 2> /dev/null >| "$NIX_BUILD_TOP/env-vars" || true;
    fi
}
echoCmd ()
{
 
    printf "%s:" "$1";
    shift;
    printf ' %q' "$@";
    echo
}
escapeStringLiteral ()
{
 
    local result;
    result=${1//'\'/'\\'};
    result=${result//\"/'\"'};
    result=${result//'
'/"\n"};
    result=${result//''/"\r"};
    printf '%s' "$result"
}
exitHandler ()
{
 
    exitCode="$?";
    set +e;
    if [ -n "${showBuildStats:-}" ]; then
        read -r -d '' -a buildTimes < <(times);
        echo "build times:";
        echo "user time for the shell             ${buildTimes[0]}";
        echo "system time for the shell           ${buildTimes[1]}";
        echo "user time for all child processes   ${buildTimes[2]}";
        echo "system time for all child processes ${buildTimes[3]}";
    fi;
    if (( "$exitCode" != 0 )); then
        runHook failureHook;
        if [ -n "${succeedOnFailure:-}" ]; then
            echo "build failed with exit code $exitCode (ignored)";
            mkdir -p "$out/nix-support";
            printf "%s" "$exitCode" > "$out/nix-support/failed";
            exit 0;
        fi;
    else
        runHook exitHook;
    fi;
    return "$exitCode"
}
filterExisting ()
{
 
    for fn in "$@";
    do
        if test -e "$fn"; then
            echo "$fn";
        fi;
    done
}
findGdkPixbufLoaders ()
{
 
    local loadersCache="$1/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache";
    if [[ -f "$loadersCache" ]]; then
        if [[ -f "${GDK_PIXBUF_MODULE_FILE-}" ]]; then
            if (( "$(cat "$loadersCache" | wc -l)" > "$(cat "$GDK_PIXBUF_MODULE_FILE" | wc -l)" )); then
                export GDK_PIXBUF_MODULE_FILE="$loadersCache";
            fi;
        else
            export GDK_PIXBUF_MODULE_FILE="$loadersCache";
        fi;
    fi
}
findInputs ()
{
 
    local -r pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    local varVar="${pkgAccumVarVars[hostOffset + 1]}";
    local varRef="$varVar[$((targetOffset - hostOffset))]";
    local var="${!varRef}";
    unset -v varVar varRef;
    local varSlice="$var[*]";
    case "${!varSlice-}" in 
        *" $pkg "*)
            return 0
        ;;
    esac;
    unset -v varSlice;
    eval "$var"'+=("$pkg")';
    if ! [ -e "$pkg" ]; then
        echo "build input $pkg does not exist" 1>&2;
        exit 1;
    fi;
    function mapOffset () 
    { 
        local -r inputOffset="$1";
        local -n outputOffset="$2";
        if (( inputOffset <= 0 )); then
            outputOffset=$((inputOffset + hostOffset));
        else
            outputOffset=$((inputOffset - 1 + targetOffset));
        fi
    };
    local relHostOffset;
    for relHostOffset in "${allPlatOffsets[@]}";
    do
        local files="${propagatedDepFilesVars[relHostOffset + 1]}";
        local hostOffsetNext;
        mapOffset "$relHostOffset" hostOffsetNext;
        (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
        local relTargetOffset;
        for relTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$relHostOffset" <= "$relTargetOffset" )) || continue;
            local fileRef="${files}[$relTargetOffset - $relHostOffset]";
            local file="${!fileRef}";
            unset -v fileRef;
            local targetOffsetNext;
            mapOffset "$relTargetOffset" targetOffsetNext;
            (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
            [[ -f "$pkg/nix-support/$file" ]] || continue;
            local pkgNext;
            read -r -d '' pkgNext < "$pkg/nix-support/$file" || true;
            for pkgNext in $pkgNext;
            do
                findInputs "$pkgNext" "$hostOffsetNext" "$targetOffsetNext";
            done;
        done;
    done
}
find_gio_modules ()
{
 
    if [ -d "$1/lib/gio/modules" ] && [ -n "$(ls -A "$1/lib/gio/modules")" ]; then
        gappsWrapperArgs+=(--prefix GIO_EXTRA_MODULES : "$1/lib/gio/modules");
    fi
}
fixLibtool ()
{
 
    local search_path;
    for flag in $NIX_LDFLAGS;
    do
        case $flag in 
            -L*)
                search_path+=" ${flag#-L}"
            ;;
        esac;
    done;
    sed -i "$1" -e "s^eval \(sys_lib_search_path=\).*^\1'${search_path:-}'^" -e 's^eval sys_lib_.+search_path=.*^^'
}
fixupPhase ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        if [ -e "${!output}" ]; then
            chmod -R u+w "${!output}";
        fi;
    done;
    runHook preFixup;
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" runHook fixupOutput;
    done;
    recordPropagatedDependencies;
    if [ -n "${setupHook:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        substituteAll "$setupHook" "${!outputDev}/nix-support/setup-hook";
    fi;
    if [ -n "${setupHooks:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        local hook;
        for hook in ${setupHooks[@]};
        do
            local content;
            consumeEntire content < "$hook";
            substituteAllStream content "file '$hook'" >> "${!outputDev}/nix-support/setup-hook";
            unset -v content;
        done;
        unset -v hook;
    fi;
    if [ -n "${propagatedUserEnvPkgs:-}" ]; then
        mkdir -p "${!outputBin}/nix-support";
        printWords $propagatedUserEnvPkgs > "${!outputBin}/nix-support/propagated-user-env-packages";
    fi;
    runHook postFixup
}
forceLinkCoreFoundationFramework ()
{
 
    NIX_CFLAGS_COMPILE="-F/nix/store/ja18z0clxqzibsh4wal5rs5q4rg6k91k-apple-framework-CoreFoundation-11.0.0/Library/Frameworks${NIX_CFLAGS_COMPILE:+ }${NIX_CFLAGS_COMPILE-}";
    NIX_LDFLAGS+=" /nix/store/ja18z0clxqzibsh4wal5rs5q4rg6k91k-apple-framework-CoreFoundation-11.0.0/Library/Frameworks/CoreFoundation.framework/CoreFoundation.tbd"
}
formatArgs ()
{
 
    printf '%s' "${1@Q}";
    shift;
    while [ $# -gt 0 ]; do
        case "$1" in 
            --set)
                formatArgsLine 2 "$@";
                shift 2
            ;;
            --set-default)
                formatArgsLine 2 "$@";
                shift 2
            ;;
            --unset)
                formatArgsLine 1 "$@";
                shift 1
            ;;
            --prefix)
                formatArgsLine 3 "$@";
                shift 3
            ;;
            --suffix)
                formatArgsLine 3 "$@";
                shift 3
            ;;
            --chdir)
                formatArgsLine 1 "$@";
                shift 1
            ;;
            --add-flags)
                formatArgsLine 1 "$@";
                shift 1
            ;;
            --append-flags)
                formatArgsLine 1 "$@";
                shift 1
            ;;
            --argv0)
                formatArgsLine 1 "$@";
                shift 1
            ;;
            --inherit-argv0)
                formatArgsLine 0 "$@"
            ;;
        esac;
        shift;
    done;
    printf '%s\n' ""
}
formatArgsLine ()
{
 
    local ARG_COUNT LENGTH;
    ARG_COUNT=$1;
    LENGTH=$#;
    shift;
    printf '%s' ' \
    '"$1";
    shift;
    while [ "$ARG_COUNT" -gt $((LENGTH - $# - 2)) ]; do
        printf ' %s' "${1@Q}";
        shift;
    done
}
gappsWrapperArgsHook ()
{
 
    if [ -n "$GDK_PIXBUF_MODULE_FILE" ]; then
        gappsWrapperArgs+=(--set GDK_PIXBUF_MODULE_FILE "$GDK_PIXBUF_MODULE_FILE");
    fi;
    if [ -n "$GSETTINGS_SCHEMAS_PATH" ]; then
        gappsWrapperArgs+=(--prefix XDG_DATA_DIRS : "$GSETTINGS_SCHEMAS_PATH");
    fi;
    if [ -d "${prefix:?}/share" ]; then
        gappsWrapperArgs+=(--prefix XDG_DATA_DIRS : "$prefix/share");
    fi;
    if [ -d "$prefix/lib/gio/modules" ] && [ -n "$(ls -A "$prefix/lib/gio/modules")" ]; then
        gappsWrapperArgs+=(--prefix GIO_EXTRA_MODULES : "$prefix/lib/gio/modules");
    fi;
    for v in ${wrapPrefixVariables:-} GST_PLUGIN_SYSTEM_PATH_1_0 GI_TYPELIB_PATH GRL_PLUGIN_PATH;
    do
        if [ -n "${!v}" ]; then
            gappsWrapperArgs+=(--prefix "$v" : "${!v}");
        fi;
    done
}
genericBuild ()
{
 
    export GZIP_NO_TIMESTAMPS=1;
    if [ -f "${buildCommandPath:-}" ]; then
        source "$buildCommandPath";
        return;
    fi;
    if [ -n "${buildCommand:-}" ]; then
        eval "$buildCommand";
        return;
    fi;
    if [ -z "${phases[*]:-}" ]; then
        phases="${prePhases[*]:-} unpackPhase patchPhase ${preConfigurePhases[*]:-}             configurePhase ${preBuildPhases[*]:-} buildPhase checkPhase             ${preInstallPhases[*]:-} installPhase ${preFixupPhases[*]:-} fixupPhase installCheckPhase             ${preDistPhases[*]:-} distPhase ${postPhases[*]:-}";
    fi;
    for curPhase in ${phases[*]};
    do
        runPhase "$curPhase";
    done
}
getAllOutputNames ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        echo "${!outputs[*]}";
    else
        echo "$outputs";
    fi
}
getHostRole ()
{
 
    getRole "$hostOffset"
}
getHostRoleEnvHook ()
{
 
    getRole "$depHostOffset"
}
getRole ()
{
 
    case $1 in 
        -1)
            role_post='_FOR_BUILD'
        ;;
        0)
            role_post=''
        ;;
        1)
            role_post='_FOR_TARGET'
        ;;
        *)
            echo "libiconv-50: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
getTargetRole ()
{
 
    getRole "$targetOffset"
}
getTargetRoleEnvHook ()
{
 
    getRole "$depTargetOffset"
}
getTargetRoleWrapper ()
{
 
    case $targetOffset in 
        -1)
            export NIX_@wrapperName@_TARGET_BUILD_@suffixSalt@=1
        ;;
        0)
            export NIX_@wrapperName@_TARGET_HOST_@suffixSalt@=1
        ;;
        1)
            export NIX_@wrapperName@_TARGET_TARGET_@suffixSalt@=1
        ;;
        *)
            echo "libiconv-50: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
gettextDataDirsHook ()
{
 
    getHostRoleEnvHook;
    if [ -d "$1/share/gettext" ]; then
        addToSearchPath "GETTEXTDATADIRS${role_post}" "$1/share/gettext";
    fi
}
glibPreFixupPhase ()
{
 
    if [ -d "$prefix/share/glib-2.0/schemas" ]; then
        mkdir -p "${!outputLib}/share/gsettings-schemas/$name/glib-2.0";
        mv "$prefix/share/glib-2.0/schemas" "${!outputLib}/share/gsettings-schemas/$name/glib-2.0/";
    fi;
    addToSearchPath GSETTINGS_SCHEMAS_PATH "${!outputLib}/share/gsettings-schemas/$name"
}
glibPreInstallPhase ()
{
 
    makeFlagsArray+=("gsettingsschemadir=${!outputLib}/share/gsettings-schemas/$name/glib-2.0/schemas/")
}
indent4 ()
{
 
    printf '%s' "$1" | awk '{ if ($0 != "") { print "    "$0 } else { print $0 }}'
}
installCheckPhase ()
{
 
    runHook preInstallCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom installCheckPhase, doing nothing";
    else
        if [[ -z "${installCheckTarget:-}" ]] && ! make -n ${makefile:+-f $makefile} "${installCheckTarget:-installcheck}" > /dev/null 2>&1; then
            echo "no installcheck target in ${makefile:-Makefile}, doing nothing";
        else
            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
            _accumFlagsArray makeFlags makeFlagsArray installCheckFlags installCheckFlagsArray;
            flagsArray+=(${installCheckTarget:-installcheck});
            echoCmd 'installcheck flags' "${flagsArray[@]}";
            make ${makefile:+-f $makefile} "${flagsArray[@]}";
            unset flagsArray;
        fi;
    fi;
    runHook postInstallCheck
}
installPhase ()
{
 
    runHook preInstall;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom installPhase, doing nothing";
        runHook postInstall;
        return;
    else
        foundMakefile=1;
    fi;
    if [ -n "$prefix" ]; then
        mkdir -p "$prefix";
    fi;
    local flagsArray=(${enableParallelInstalling:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
    _accumFlagsArray makeFlags makeFlagsArray installFlags installFlagsArray;
    if [ -n "$__structuredAttrs" ]; then
        flagsArray+=("${installTargets[@]:-install}");
    else
        flagsArray+=(${installTargets:-install});
    fi;
    echoCmd 'install flags' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    unset flagsArray;
    runHook postInstall
}
isELF ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [ "$magic" = 'ELF' ]; then
        return 0;
    else
        return 1;
    fi
}
isMachO ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xcf") || "$magic" = $(echo -ne "\xcf\xfa\xed\xfe") ]]; then
        return 0;
    else
        if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xce") || "$magic" = $(echo -ne "\xce\xfa\xed\xfe") ]]; then
            return 0;
        else
            if [[ "$magic" = $(echo -ne "\xca\xfe\xba\xbe") || "$magic" = $(echo -ne "\xbe\xba\xfe\xca") ]]; then
                return 0;
            else
                return 1;
            fi;
        fi;
    fi
}
isScript ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 2 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" =~ \#! ]]; then
        return 0;
    else
        return 1;
    fi
}
makeBinaryWrapper ()
{
 
    local NIX_CFLAGS_COMPILE= NIX_CFLAGS_LINK=;
    local original="$1";
    local wrapper="$2";
    shift 2;
    assertExecutable "$original";
    mkdir -p "$(dirname "$wrapper")";
    makeDocumentedCWrapper "$original" "$@" | /nix/store/vwh2qqal1q101wv4jy40giavp73q0msd-clang-wrapper-16.0.6/bin/cc -Wall -Werror -Wpedantic -Wno-overlength-strings -Os -x c -o "$wrapper" -
}
makeCWrapper ()
{
 
    local argv0 inherit_argv0 n params cmd main flagsBefore flagsAfter flags executable length;
    local uses_prefix uses_suffix uses_assert uses_assert_success uses_stdio uses_asprintf;
    executable=$(escapeStringLiteral "$1");
    params=("$@");
    length=${#params[*]};
    for ((n = 1; n < length; n += 1))
    do
        p="${params[n]}";
        case $p in 
            --set)
                cmd=$(setEnv "${params[n + 1]}" "${params[n + 2]}");
                main="$main$cmd"'
';
                n=$((n + 2));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 2 arguments"'
'
            ;;
            --set-default)
                cmd=$(setDefaultEnv "${params[n + 1]}" "${params[n + 2]}");
                main="$main$cmd"'
';
                uses_stdio=1;
                uses_assert_success=1;
                n=$((n + 2));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 2 arguments"'
'
            ;;
            --unset)
                cmd=$(unsetEnv "${params[n + 1]}");
                main="$main$cmd"'
';
                uses_stdio=1;
                uses_assert_success=1;
                n=$((n + 1));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 1 argument"'
'
            ;;
            --prefix)
                cmd=$(setEnvPrefix "${params[n + 1]}" "${params[n + 2]}" "${params[n + 3]}");
                main="$main$cmd"'
';
                uses_prefix=1;
                uses_asprintf=1;
                uses_stdio=1;
                uses_assert_success=1;
                uses_assert=1;
                n=$((n + 3));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 3 arguments"'
'
            ;;
            --suffix)
                cmd=$(setEnvSuffix "${params[n + 1]}" "${params[n + 2]}" "${params[n + 3]}");
                main="$main$cmd"'
';
                uses_suffix=1;
                uses_asprintf=1;
                uses_stdio=1;
                uses_assert_success=1;
                uses_assert=1;
                n=$((n + 3));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 3 arguments"'
'
            ;;
            --chdir)
                cmd=$(changeDir "${params[n + 1]}");
                main="$main$cmd"'
';
                uses_stdio=1;
                uses_assert_success=1;
                n=$((n + 1));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 1 argument"'
'
            ;;
            --add-flags)
                flags="${params[n + 1]}";
                flagsBefore="$flagsBefore $flags";
                uses_assert=1;
                n=$((n + 1));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 1 argument"'
'
            ;;
            --append-flags)
                flags="${params[n + 1]}";
                flagsAfter="$flagsAfter $flags";
                uses_assert=1;
                n=$((n + 1));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 1 argument"'
'
            ;;
            --argv0)
                argv0=$(escapeStringLiteral "${params[n + 1]}");
                inherit_argv0=;
                n=$((n + 1));
                [ $n -ge "$length" ] && main="$main#error makeCWrapper: $p takes 1 argument"'
'
            ;;
            --inherit-argv0)
                inherit_argv0=1
            ;;
            *)
                main="$main#error makeCWrapper: Unknown argument ${p}"'
'
            ;;
        esac;
    done;
    [[ -z "$flagsBefore" && -z "$flagsAfter" ]] || main="$main"${main:+'
'}$(addFlags "$flagsBefore" "$flagsAfter")'
''
';
    [ -z "$inherit_argv0" ] && main="${main}argv[0] = \"${argv0:-${executable}}\";"'
';
    main="${main}return execv(\"${executable}\", argv);"'
';
    [ -z "$uses_asprintf" ] || printf '%s\n' "#define _GNU_SOURCE         /* See feature_test_macros(7) */";
    printf '%s\n' "#include <unistd.h>";
    printf '%s\n' "#include <stdlib.h>";
    [ -z "$uses_assert" ] || printf '%s\n' "#include <assert.h>";
    [ -z "$uses_stdio" ] || printf '%s\n' "#include <stdio.h>";
    [ -z "$uses_assert_success" ] || printf '\n%s\n' "#define assert_success(e) do { if ((e) < 0) { perror(#e); abort(); } } while (0)";
    [ -z "$uses_prefix" ] || printf '\n%s\n' "$(setEnvPrefixFn)";
    [ -z "$uses_suffix" ] || printf '\n%s\n' "$(setEnvSuffixFn)";
    printf '\n%s' "int main(int argc, char **argv) {";
    printf '\n%s' "$(indent4 "$main")";
    printf '\n%s\n' "}"
}
makeDocumentedCWrapper ()
{
 
    local src docs;
    src=$(makeCWrapper "$@");
    docs=$(docstring "$@");
    printf '%s\n\n' "$src";
    printf '%s\n' "$docs"
}
makeShellWrapper ()
{
 
    local original="$1";
    local wrapper="$2";
    local params varName value command separator n fileNames;
    local argv0 flagsBefore flagsAfter flags;
    assertExecutable "$original";
    function addValue () 
    { 
        local mode="$1";
        local varName="$2";
        local separator="$3";
        local value="$4";
        local reenableGlob=0;
        if [[ ! -o noglob ]]; then
            reenableGlob=1;
        fi;
        set -o noglob;
        if [[ -n "$value" ]]; then
            local old_ifs=$IFS;
            IFS=$separator;
            if [[ "$mode" == '--prefix'* ]]; then
                local tmp=;
                for v in $value;
                do
                    tmp=$v${tmp:+$separator}$tmp;
                done;
                value="$tmp";
            fi;
            for v in $value;
            do
                { 
                    echo "$varName=\${$varName:+${separator@Q}\$$varName${separator@Q}}";
                    if [[ "$mode" == '--prefix'* ]]; then
                        echo "$varName=\${$varName/${separator@Q}${v@Q}${separator@Q}/${separator@Q}}";
                        echo "$varName=${v@Q}\$$varName";
                    else
                        if [[ "$mode" == '--suffix'* ]]; then
                            echo "if [[ \$$varName != *${separator@Q}${v@Q}${separator@Q}* ]]; then";
                            echo "    $varName=\$$varName${v@Q}";
                            echo "fi";
                        else
                            echo "unknown mode $mode!" 1>&2;
                            exit 1;
                        fi;
                    fi;
                    echo "$varName=\${$varName#${separator@Q}}";
                    echo "$varName=\${$varName%${separator@Q}}";
                    echo "export $varName"
                } >> "$wrapper";
            done;
            IFS=$old_ifs;
        fi;
        if (( reenableGlob )); then
            set +o noglob;
        fi
    };
    mkdir -p "$(dirname "$wrapper")";
    echo "#! /nix/store/6nxav88iiz0g8m598xy643f8hhdz5kkx-bash-5.2-p21/bin/bash -e" > "$wrapper";
    params=("$@");
    for ((n = 2; n < ${#params[*]}; n += 1))
    do
        p="${params[$n]}";
        if [[ "$p" == "--set" ]]; then
            varName="${params[$((n + 1))]}";
            value="${params[$((n + 2))]}";
            n=$((n + 2));
            echo "export $varName=${value@Q}" >> "$wrapper";
        else
            if [[ "$p" == "--set-default" ]]; then
                varName="${params[$((n + 1))]}";
                value="${params[$((n + 2))]}";
                n=$((n + 2));
                echo "export $varName=\${$varName-${value@Q}}" >> "$wrapper";
            else
                if [[ "$p" == "--unset" ]]; then
                    varName="${params[$((n + 1))]}";
                    n=$((n + 1));
                    echo "unset $varName" >> "$wrapper";
                else
                    if [[ "$p" == "--chdir" ]]; then
                        dir="${params[$((n + 1))]}";
                        n=$((n + 1));
                        echo "cd ${dir@Q}" >> "$wrapper";
                    else
                        if [[ "$p" == "--run" ]]; then
                            command="${params[$((n + 1))]}";
                            n=$((n + 1));
                            echo "$command" >> "$wrapper";
                        else
                            if [[ ( "$p" == "--suffix" ) || ( "$p" == "--prefix" ) ]]; then
                                varName="${params[$((n + 1))]}";
                                separator="${params[$((n + 2))]}";
                                value="${params[$((n + 3))]}";
                                n=$((n + 3));
                                addValue "$p" "$varName" "$separator" "$value";
                            else
                                if [[ ( "$p" == "--suffix-each" ) || ( "$p" == "--prefix-each" ) ]]; then
                                    varName="${params[$((n + 1))]}";
                                    separator="${params[$((n + 2))]}";
                                    values="${params[$((n + 3))]}";
                                    n=$((n + 3));
                                    for value in $values;
                                    do
                                        addValue "$p" "$varName" "$separator" "$value";
                                    done;
                                else
                                    if [[ ( "$p" == "--suffix-contents" ) || ( "$p" == "--prefix-contents" ) ]]; then
                                        varName="${params[$((n + 1))]}";
                                        separator="${params[$((n + 2))]}";
                                        fileNames="${params[$((n + 3))]}";
                                        n=$((n + 3));
                                        for fileName in $fileNames;
                                        do
                                            contents="$(cat "$fileName")";
                                            addValue "$p" "$varName" "$separator" "$contents";
                                        done;
                                    else
                                        if [[ "$p" == "--add-flags" ]]; then
                                            flags="${params[$((n + 1))]}";
                                            n=$((n + 1));
                                            flagsBefore="${flagsBefore-} $flags";
                                        else
                                            if [[ "$p" == "--append-flags" ]]; then
                                                flags="${params[$((n + 1))]}";
                                                n=$((n + 1));
                                                flagsAfter="${flagsAfter-} $flags";
                                            else
                                                if [[ "$p" == "--argv0" ]]; then
                                                    argv0="${params[$((n + 1))]}";
                                                    n=$((n + 1));
                                                else
                                                    if [[ "$p" == "--inherit-argv0" ]]; then
                                                        argv0='$0';
                                                    else
                                                        die "makeWrapper doesn't understand the arg $p";
                                                    fi;
                                                fi;
                                            fi;
                                        fi;
                                    fi;
                                fi;
                            fi;
                        fi;
                    fi;
                fi;
            fi;
        fi;
    done;
    echo exec ${argv0:+-a \"$argv0\"} \""$original"\" "${flagsBefore-}" '"$@"' "${flagsAfter-}" >> "$wrapper";
    chmod +x "$wrapper"
}
makeWrapper ()
{
 
    makeShellWrapper "$@"
}
make_glib_find_gsettings_schemas ()
{
 
    for maybe_dir in "$1"/share/gsettings-schemas/*;
    do
        if [[ -d "$maybe_dir/glib-2.0/schemas" ]]; then
            addToSearchPath GSETTINGS_SCHEMAS_PATH "$maybe_dir";
        fi;
    done
}
mapOffset ()
{
 
    local -r inputOffset="$1";
    local -n outputOffset="$2";
    if (( inputOffset <= 0 )); then
        outputOffset=$((inputOffset + hostOffset));
    else
        outputOffset=$((inputOffset - 1 + targetOffset));
    fi
}
moveToOutput ()
{
 
    local patt="$1";
    local dstOut="$2";
    local output;
    for output in $(getAllOutputNames);
    do
        if [ "${!output}" = "$dstOut" ]; then
            continue;
        fi;
        local srcPath;
        for srcPath in "${!output}"/$patt;
        do
            if [ ! -e "$srcPath" ] && [ ! -L "$srcPath" ]; then
                continue;
            fi;
            if [ "$dstOut" = REMOVE ]; then
                echo "Removing $srcPath";
                rm -r "$srcPath";
            else
                local dstPath="$dstOut${srcPath#${!output}}";
                echo "Moving $srcPath to $dstPath";
                if [ -d "$dstPath" ] && [ -d "$srcPath" ]; then
                    rmdir "$srcPath" --ignore-fail-on-non-empty;
                    if [ -d "$srcPath" ]; then
                        mv -t "$dstPath" "$srcPath"/*;
                        rmdir "$srcPath";
                    fi;
                else
                    mkdir -p "$(readlink -m "$dstPath/..")";
                    mv "$srcPath" "$dstPath";
                fi;
            fi;
            local srcParent="$(readlink -m "$srcPath/..")";
            if [ -n "$(find "$srcParent" -maxdepth 0 -type d -empty 2> /dev/null)" ]; then
                echo "Removing empty $srcParent/ and (possibly) its parents";
                rmdir -p --ignore-fail-on-non-empty "$srcParent" 2> /dev/null || true;
            fi;
        done;
    done
}
patchPhase ()
{
 
    runHook prePatch;
    local -a patchesArray;
    if [ -n "$__structuredAttrs" ]; then
        patchesArray=(${patches:+"${patches[@]}"});
    else
        patchesArray=(${patches:-});
    fi;
    for i in "${patchesArray[@]}";
    do
        echo "applying patch $i";
        local uncompress=cat;
        case "$i" in 
            *.gz)
                uncompress="gzip -d"
            ;;
            *.bz2)
                uncompress="bzip2 -d"
            ;;
            *.xz)
                uncompress="xz -d"
            ;;
            *.lzma)
                uncompress="lzma -d"
            ;;
        esac;
        local -a flagsArray;
        if [ -n "$__structuredAttrs" ]; then
            flagsArray=("${patchFlags[@]:--p1}");
        else
            flagsArray=(${patchFlags:--p1});
        fi;
        $uncompress < "$i" 2>&1 | patch "${flagsArray[@]}";
    done;
    runHook postPatch
}
patchShebangs ()
{
 
    local pathName;
    local update;
    while [[ $# -gt 0 ]]; do
        case "$1" in 
            --host)
                pathName=HOST_PATH;
                shift
            ;;
            --build)
                pathName=PATH;
                shift
            ;;
            --update)
                update=true;
                shift
            ;;
            --)
                shift;
                break
            ;;
            -* | --*)
                echo "Unknown option $1 supplied to patchShebangs" 1>&2;
                return 1
            ;;
            *)
                break
            ;;
        esac;
    done;
    echo "patching script interpreter paths in $@";
    local f;
    local oldPath;
    local newPath;
    local arg0;
    local args;
    local oldInterpreterLine;
    local newInterpreterLine;
    if [[ $# -eq 0 ]]; then
        echo "No arguments supplied to patchShebangs" 1>&2;
        return 0;
    fi;
    local f;
    while IFS= read -r -d '' f; do
        isScript "$f" || continue;
        read -r oldInterpreterLine < "$f";
        read -r oldPath arg0 args <<< "${oldInterpreterLine:2}";
        if [[ -z "${pathName:-}" ]]; then
            if [[ -n $strictDeps && $f == "$NIX_STORE"* ]]; then
                pathName=HOST_PATH;
            else
                pathName=PATH;
            fi;
        fi;
        if [[ "$oldPath" == *"/bin/env" ]]; then
            if [[ $arg0 == "-S" ]]; then
                arg0=${args%% *};
                args=${args#* };
                newPath="$(PATH="${!pathName}" command -v "env" || true)";
                args="-S $(PATH="${!pathName}" command -v "$arg0" || true) $args";
            else
                if [[ $arg0 == "-"* || $arg0 == *"="* ]]; then
                    echo "$f: unsupported interpreter directive \"$oldInterpreterLine\" (set dontPatchShebangs=1 and handle shebang patching yourself)" 1>&2;
                    exit 1;
                else
                    newPath="$(PATH="${!pathName}" command -v "$arg0" || true)";
                fi;
            fi;
        else
            if [[ -z $oldPath ]]; then
                oldPath="/bin/sh";
            fi;
            newPath="$(PATH="${!pathName}" command -v "$(basename "$oldPath")" || true)";
            args="$arg0 $args";
        fi;
        newInterpreterLine="$newPath $args";
        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};
        if [[ -n "$oldPath" && ( "$update" == true || "${oldPath:0:${#NIX_STORE}}" != "$NIX_STORE" ) ]]; then
            if [[ -n "$newPath" && "$newPath" != "$oldPath" ]]; then
                echo "$f: interpreter directive changed from \"$oldInterpreterLine\" to \"$newInterpreterLine\"";
                escapedInterpreterLine=${newInterpreterLine//\\/\\\\};
                timestamp=$(stat --printf "%y" "$f");
                sed -i -e "1 s|.*|#\!$escapedInterpreterLine|" "$f";
                touch --date "$timestamp" "$f";
            fi;
        fi;
    done < <(find "$@" -type f -perm -0100 -print0)
}
patchShebangsAuto ()
{
 
    if [[ -z "${dontPatchShebangs-}" && -e "$prefix" ]]; then
        if [[ "$output" != out && "$output" = "$outputDev" ]]; then
            patchShebangs --build "$prefix";
        else
            patchShebangs --host "$prefix";
        fi;
    fi
}
pkgConfigWrapper_addPkgConfigPath ()
{
 
    local role_post;
    getHostRoleEnvHook;
    addToSearchPath "PKG_CONFIG_PATH${role_post}" "$1/lib/pkgconfig";
    addToSearchPath "PKG_CONFIG_PATH${role_post}" "$1/share/pkgconfig"
}
prependToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if declare -p "$1" 2> /dev/null | grep -q '^'; then
        type="$(declare -p "$1")";
        if [[ "$type" =~ "declare -A" ]]; then
            echo "prependToVar(): ERROR: trying to use prependToVar on an associative array." 1>&2;
            return 1;
        else
            if [[ "$type" =~ "declare -a" ]]; then
                useArray=true;
            else
                useArray=false;
            fi;
        fi;
    fi;
    shift;
    if $useArray; then
        nameref=("$@" ${nameref+"${nameref[@]}"});
    else
        nameref="$* ${nameref-}";
    fi
}
printLines ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s\n' "$@"
}
printWords ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s ' "$@"
}
recordPropagatedDependencies ()
{
 
    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);
    declare -ra flatFiles=("${propagatedBuildDepFiles[@]}" "${propagatedHostDepFiles[@]}" "${propagatedTargetDepFiles[@]}");
    local propagatedInputsIndex;
    for propagatedInputsIndex in "${!flatVars[@]}";
    do
        local propagatedInputsSlice="${flatVars[$propagatedInputsIndex]}[@]";
        local propagatedInputsFile="${flatFiles[$propagatedInputsIndex]}";
        [[ -n "${!propagatedInputsSlice}" ]] || continue;
        mkdir -p "${!outputDev}/nix-support";
        printWords ${!propagatedInputsSlice} > "${!outputDev}/nix-support/$propagatedInputsFile";
    done
}
runHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook;
    for hook in "_callImplicitHook 0 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _eval "$hook" "$@";
    done;
    return 0
}
runOneHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook ret=1;
    for hook in "_callImplicitHook 1 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        if _eval "$hook" "$@"; then
            ret=0;
            break;
        fi;
    done;
    return "$ret"
}
runPhase ()
{
 
    local curPhase="$*";
    if [[ "$curPhase" = unpackPhase && -n "${dontUnpack:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = patchPhase && -n "${dontPatch:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = configurePhase && -n "${dontConfigure:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = buildPhase && -n "${dontBuild:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = checkPhase && -z "${doCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installPhase && -n "${dontInstall:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = fixupPhase && -n "${dontFixup:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installCheckPhase && -z "${doInstallCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = distPhase && -z "${doDist:-}" ]]; then
        return;
    fi;
    if [[ -n $NIX_LOG_FD ]]; then
        echo "@nix { \"action\": \"setPhase\", \"phase\": \"$curPhase\" }" >&"$NIX_LOG_FD";
    fi;
    showPhaseHeader "$curPhase";
    dumpVars;
    local startTime=$(date +"%s");
    eval "${!curPhase:-$curPhase}";
    local endTime=$(date +"%s");
    showPhaseFooter "$curPhase" "$startTime" "$endTime";
    if [ "$curPhase" = unpackPhase ]; then
        [ -n "${sourceRoot:-}" ] && chmod +x "${sourceRoot}";
        cd "${sourceRoot:-.}";
    fi
}
setDefaultEnv ()
{
 
    local key value;
    key=$(escapeStringLiteral "$1");
    value=$(escapeStringLiteral "$2");
    printf '%s' "assert_success(setenv(\"$key\", \"$value\", 0));";
    assertValidEnvName "$1"
}
setEnv ()
{
 
    local key value;
    key=$(escapeStringLiteral "$1");
    value=$(escapeStringLiteral "$2");
    printf '%s' "putenv(\"$key=$value\");";
    assertValidEnvName "$1"
}
setEnvPrefix ()
{
 
    local env sep val;
    env=$(escapeStringLiteral "$1");
    sep=$(escapeStringLiteral "$2");
    val=$(escapeStringLiteral "$3");
    printf '%s' "set_env_prefix(\"$env\", \"$sep\", \"$val\");";
    assertValidEnvName "$1"
}
setEnvPrefixFn ()
{
 
    printf '%s' "void set_env_prefix(char *env, char *sep, char *prefix) {
    char *existing = getenv(env);
    if (existing) {
        char *val;
        assert_success(asprintf(&val, \"%s%s%s\", prefix, sep, existing));
        assert_success(setenv(env, val, 1));
        free(val);
    } else {
        assert_success(setenv(env, prefix, 1));
    }
}
"
}
setEnvSuffix ()
{
 
    local env sep val;
    env=$(escapeStringLiteral "$1");
    sep=$(escapeStringLiteral "$2");
    val=$(escapeStringLiteral "$3");
    printf '%s' "set_env_suffix(\"$env\", \"$sep\", \"$val\");";
    assertValidEnvName "$1"
}
setEnvSuffixFn ()
{
 
    printf '%s' "void set_env_suffix(char *env, char *sep, char *suffix) {
    char *existing = getenv(env);
    if (existing) {
        char *val;
        assert_success(asprintf(&val, \"%s%s%s\", existing, sep, suffix));
        assert_success(setenv(env, val, 1));
        free(val);
    } else {
        assert_success(setenv(env, suffix, 1));
    }
}
"
}
showPhaseFooter ()
{
 
    local phase="$1";
    local startTime="$2";
    local endTime="$3";
    local delta=$(( endTime - startTime ));
    (( delta < 30 )) && return;
    local H=$((delta/3600));
    local M=$((delta%3600/60));
    local S=$((delta%60));
    echo -n "$phase completed in ";
    (( H > 0 )) && echo -n "$H hours ";
    (( M > 0 )) && echo -n "$M minutes ";
    echo "$S seconds"
}
showPhaseHeader ()
{
 
    local phase="$1";
    echo "Running phase: $phase"
}
stripDirs ()
{
 
    local cmd="$1";
    local ranlibCmd="$2";
    local paths="$3";
    local stripFlags="$4";
    local excludeFlags=();
    local pathsNew=;
    [ -z "$cmd" ] && echo "stripDirs: Strip command is empty" 1>&2 && exit 1;
    [ -z "$ranlibCmd" ] && echo "stripDirs: Ranlib command is empty" 1>&2 && exit 1;
    local pattern;
    if [ -n "${stripExclude:-}" ]; then
        for pattern in "${stripExclude[@]}";
        do
            excludeFlags+=(-a '!' '(' -name "$pattern" -o -wholename "$prefix/$pattern" ')');
        done;
    fi;
    local p;
    for p in ${paths};
    do
        if [ -e "$prefix/$p" ]; then
            pathsNew="${pathsNew} $prefix/$p";
        fi;
    done;
    paths=${pathsNew};
    if [ -n "${paths}" ]; then
        echo "stripping (with command $cmd and flags $stripFlags) in $paths";
        local striperr;
        striperr="$(mktemp --tmpdir="$TMPDIR" 'striperr.XXXXXX')";
        find $paths -type f "${excludeFlags[@]}" -a '!' -path "$prefix/lib/debug/*" -print0 | xargs -r -0 -n1 -- realpath -z | sort -u -z | xargs -r -0 -n1 -P "$NIX_BUILD_CORES" -- $cmd $stripFlags 2> "$striperr" || exit_code=$?;
        [[ "$exit_code" = 123 || -z "$exit_code" ]] || ( cat "$striperr" 1>&2 && exit 1 );
        rm "$striperr";
        find $paths -name '*.a' -type f -exec $ranlibCmd '{}' \; 2> /dev/null;
    fi
}
stripHash ()
{
 
    local strippedName casematchOpt=0;
    strippedName="$(basename -- "$1")";
    shopt -q nocasematch && casematchOpt=1;
    shopt -u nocasematch;
    if [[ "$strippedName" =~ ^[a-z0-9]{32}- ]]; then
        echo "${strippedName:33}";
    else
        echo "$strippedName";
    fi;
    if (( casematchOpt )); then
        shopt -s nocasematch;
    fi
}
substitute ()
{
 
    local input="$1";
    local output="$2";
    shift 2;
    if [ ! -f "$input" ]; then
        echo "substitute(): ERROR: file '$input' does not exist" 1>&2;
        return 1;
    fi;
    local content;
    consumeEntire content < "$input";
    if [ -e "$output" ]; then
        chmod +w "$output";
    fi;
    substituteStream content "file '$input'" "$@" > "$output"
}
substituteAll ()
{
 
    local input="$1";
    local output="$2";
    local -a args=();
    _allFlags;
    substitute "$input" "$output" "${args[@]}"
}
substituteAllInPlace ()
{
 
    local fileName="$1";
    shift;
    substituteAll "$fileName" "$fileName" "$@"
}
substituteAllStream ()
{
 
    local -a args=();
    _allFlags;
    substituteStream "$1" "$2" "${args[@]}"
}
substituteInPlace ()
{
 
    local -a fileNames=();
    for arg in "$@";
    do
        if [[ "$arg" = "--"* ]]; then
            break;
        fi;
        fileNames+=("$arg");
        shift;
    done;
    for file in "${fileNames[@]}";
    do
        substitute "$file" "$file" "$@";
    done
}
substituteStream ()
{
 
    local var=$1;
    local description=$2;
    shift 2;
    while (( "$#" )); do
        case "$1" in 
            --replace)
                pattern="$2";
                replacement="$3";
                shift 3;
                local savedvar;
                savedvar="${!var}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                if [ "$pattern" != "$replacement" ]; then
                    if [ "${!var}" == "$savedvar" ]; then
                        echo "substituteStream(): WARNING: pattern '$pattern' doesn't match anything in $description" 1>&2;
                    fi;
                fi
            ;;
            --subst-var)
                local varName="$2";
                shift 2;
                if ! [[ "$varName" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
                    echo "substituteStream(): ERROR: substitution variables must be valid Bash names, \"$varName\" isn't." 1>&2;
                    return 1;
                fi;
                if [ -z ${!varName+x} ]; then
                    echo "substituteStream(): ERROR: variable \$$varName is unset" 1>&2;
                    return 1;
                fi;
                pattern="@$varName@";
                replacement="${!varName}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var-by)
                pattern="@$2@";
                replacement="$3";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                shift 3
            ;;
            *)
                echo "substituteStream(): ERROR: Invalid command line argument: $1" 1>&2;
                return 1
            ;;
        esac;
    done;
    printf "%s" "${!var}"
}
unpackFile ()
{
 
    curSrc="$1";
    echo "unpacking source archive $curSrc";
    if ! runOneHook unpackCmd "$curSrc"; then
        echo "do not know how to unpack source archive $curSrc";
        exit 1;
    fi
}
unpackPhase ()
{
 
    runHook preUnpack;
    if [ -z "${srcs:-}" ]; then
        if [ -z "${src:-}" ]; then
            echo 'variable $src or $srcs should point to the source';
            exit 1;
        fi;
        srcs="$src";
    fi;
    local -a srcsArray;
    if [ -n "$__structuredAttrs" ]; then
        srcsArray=("${srcs[@]}");
    else
        srcsArray=($srcs);
    fi;
    local dirsBefore="";
    for i in *;
    do
        if [ -d "$i" ]; then
            dirsBefore="$dirsBefore $i ";
        fi;
    done;
    for i in "${srcsArray[@]}";
    do
        unpackFile "$i";
    done;
    : "${sourceRoot=}";
    if [ -n "${setSourceRoot:-}" ]; then
        runOneHook setSourceRoot;
    else
        if [ -z "$sourceRoot" ]; then
            for i in *;
            do
                if [ -d "$i" ]; then
                    case $dirsBefore in 
                        *\ $i\ *)

                        ;;
                        *)
                            if [ -n "$sourceRoot" ]; then
                                echo "unpacker produced multiple directories";
                                exit 1;
                            fi;
                            sourceRoot="$i"
                        ;;
                    esac;
                fi;
            done;
        fi;
    fi;
    if [ -z "$sourceRoot" ]; then
        echo "unpacker appears to have produced no directories";
        exit 1;
    fi;
    echo "source root is $sourceRoot";
    if [ "${dontMakeSourcesWritable:-0}" != 1 ]; then
        chmod -R u+w -- "$sourceRoot";
    fi;
    runHook postUnpack
}
unsetEnv ()
{
 
    local key;
    key=$(escapeStringLiteral "$1");
    printf '%s' "assert_success(unsetenv(\"$key\"));";
    assertValidEnvName "$1"
}
updateAutotoolsGnuConfigScriptsPhase ()
{
 
    if [ -n "${dontUpdateAutotoolsGnuConfigScripts-}" ]; then
        return;
    fi;
    for script in config.sub config.guess;
    do
        for f in $(find . -type f -name "$script");
        do
            echo "Updating Autotools / GNU config script to a newer upstream version: $f";
            cp -f "/nix/store/h9ywc3fm6k1l7vsc8yxiac8ks559r51g-gnu-config-2023-09-19/$script" "$f";
        done;
    done
}
updateSourceDateEpoch ()
{
 
    local path="$1";
    local -a res=($(find "$path" -type f -not -newer "$NIX_BUILD_TOP/.." -printf '%T@ %p\0' | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));
    local time="${res[0]//\.[0-9]*/}";
    local newestFile="${res[1]}";
    if [ "${time:-0}" -gt "$SOURCE_DATE_EPOCH" ]; then
        echo "setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile";
        export SOURCE_DATE_EPOCH="$time";
        local now="$(date +%s)";
        if [ "$time" -gt $((now - 60)) ]; then
            echo "warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic";
        fi;
    fi
}
wrapGApp ()
{
 
    local program="$1";
    shift 1;
    wrapProgram "$program" "${gappsWrapperArgs[@]}" "$@"
}
wrapGAppsHook ()
{
 
    [ -z "$wrapGAppsHookHasRun" ] || return 0;
    wrapGAppsHookHasRun=1;
    if [[ -z "${dontWrapGApps:-}" ]]; then
        targetDirsThatExist=();
        targetDirsRealPath=();
        targetDirs=("${prefix}/bin" "${prefix}/libexec");
        for targetDir in "${targetDirs[@]}";
        do
            if [[ -d "${targetDir}" ]]; then
                targetDirsThatExist+=("${targetDir}");
                targetDirsRealPath+=("$(realpath "${targetDir}")/");
                find "${targetDir}" -type f -executable -print0 | while IFS= read -r -d '' file; do
                    echo "Wrapping program '${file}'";
                    wrapGApp "${file}";
                done;
            fi;
        done;
        if [[ ${#targetDirsThatExist[@]} -ne 0 ]]; then
            find "${targetDirsThatExist[@]}" -type l -xtype f -executable -print0 | while IFS= read -r -d '' linkPath; do
                linkPathReal=$(realpath "${linkPath}");
                for targetPath in "${targetDirsRealPath[@]}";
                do
                    if [[ "$linkPathReal" == "$targetPath"* ]]; then
                        echo "Not wrapping link: '$linkPath' (already wrapped)";
                        continue 2;
                    fi;
                done;
                echo "Wrapping link: '$linkPath'";
                wrapGApp "${linkPath}";
            done;
        fi;
    fi
}
wrapProgram ()
{
 
    wrapProgramShell "$@"
}
wrapProgramBinary ()
{
 
    local prog="$1";
    local hidden;
    assertExecutable "$prog";
    hidden="$(dirname "$prog")/.$(basename "$prog")"-wrapped;
    while [ -e "$hidden" ]; do
        hidden="${hidden}_";
    done;
    mv "$prog" "$hidden";
    makeBinaryWrapper "$hidden" "$prog" --inherit-argv0 "${@:2}"
}
wrapProgramShell ()
{
 
    local prog="$1";
    local hidden;
    assertExecutable "$prog";
    hidden="$(dirname "$prog")/.$(basename "$prog")"-wrapped;
    while [ -e "$hidden" ]; do
        hidden="${hidden}_";
    done;
    mv "$prog" "$hidden";
    makeShellWrapper "$hidden" "$prog" --inherit-argv0 "${@:2}"
}
PATH="$PATH${nix_saved_PATH:+:$nix_saved_PATH}"
XDG_DATA_DIRS="$XDG_DATA_DIRS${nix_saved_XDG_DATA_DIRS:+:$nix_saved_XDG_DATA_DIRS}"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "${shellHook:-}"
